{"version":3,"file":"static/chunks/pages/register-dc27b1466d2109ee.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,YACA,WACE,OAAO,EAAQ,U,4GCGR,SAASC,EAAK,G,IAACC,EAAD,EAACA,SAAQ,EAAT,EAAUC,OAAAA,OAAM,IAAG,GAAI,EAC1CC,GAAkBC,EAAAA,EAAAA,GAAmB,CAAC,iBAE5C,OADAD,EAAgBE,YAAYH,EAAO,WAE/B,sB,WACI,SAACI,MAAG,C,mCAAYH,EAAgBI,iBAAe,I,SAAGN,K,2uBCF/C,SAASO,EAAS,G,IAACC,EAAD,EAACA,QAAQC,EAAT,EAASA,KAChCC,GAASC,EAAAA,EAAAA,KAMf,OACI,sB,WACI,SAACN,MAAG,C,qDACA,SAACO,EAAAA,EAAU,CAACJ,QAASA,EAASK,QAPtB,WAChBH,EAAOZ,KAAKW,S,yNCRb,SAASK,EAAgBC,GAC5B,OAAO,WACH,IAAMC,GAAOC,EAAAA,EAAAA,IAAc,GACrBP,GAASC,EAAAA,EAAAA,KAWf,OATAO,EAAAA,EAAAA,KAAe,SAACC,GACRA,EACAT,EAAOZ,KAAK,YAGZkB,EAAKI,OAAQ,KAIdJ,EAAKI,OAAM,SAACL,EAAS,KAAI,SAACV,MAAG,CAACgB,MAAO,CAACC,OAAQ,gB,qICkBhDC,EA9B+C,CACxDC,WAAY,CAAC,SACbC,WAAY,YACR,GADkB,EAARC,WAAgB,EAAPC,QAEf,MAAO,CACHC,QAAS,6CACTC,WAAY,CAAC,WAAW,aAIpCC,OAAQ,CACJC,MAAO,CACHvB,QAAS,QACTwB,UAAU,EACVP,WAAY,SAEhBC,SAAU,CACNlB,QAAS,WACTwB,UAAU,EACVP,WAAY,SAEhBE,QAAS,CACLnB,QAAS,UACTwB,UAAU,EACVP,WAAY,UAGpBQ,YAAa,mC,0DCejB,GAjCqBnB,EAAAA,EAAAA,IAAa,SAAS,KAAoB,OAApB,KAAoB,sDAC3D,OACI,SAACf,EAAAA,EAAI,C,UACD,UAACmC,EAAAA,GAAI,CACDC,cAAeZ,EACfa,WAAS,EACTC,MAAM,SACNC,MAAO,CACHC,SAAU,IACVC,gBAAiB,eAErBC,UAAW,WACP,MAAO,CACHC,KAAM,WACNjC,KAAM,2B,WAId,SAACkC,EAAAA,EAAK,C,SAAC,cACP,UAACC,EAAAA,EAAG,C,WACA,UAACC,EAAAA,EAAC,C,UAAC,6BAC0B,SAACtC,EAAAA,EAAQ,CAACE,KAAK,SAASD,QAAQ,cAE7D,SAACsC,EAAAA,EAAK,CAACC,KAAK,WACZ,SAACD,EAAAA,EAAK,CAACC,KAAK,WAAWL,KAAK,cAC5B,SAACI,EAAAA,EAAK,CAACC,KAAK,UAAUL,KAAK,cAC3B,SAACM,EAAAA,EAAY,CAACxC,QAAQ,0B","sources":["webpack://_N_E/?fbeb","webpack://_N_E/./components/common/form/page.tsx","webpack://_N_E/./components/common/form/text-link.tsx","webpack://_N_E/./components/common/unsecure_page.tsx","webpack://_N_E/./lib/shared/form-request-makeup/requests/register.ts","webpack://_N_E/./pages/register.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/register\",\n      function () {\n        return require(\"private-next-pages/register.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/register\"])\n      });\n    }\n  ","import { useCssStateManager } from \"../../../hooks/use_css_state_manager\";\n\nexport type PageProps = {\n    children: any;\n    secure?: boolean;\n};\n\nexport default function Page({children,secure = true}:PageProps) {\n    const cssStateManager = useCssStateManager([\"page-wrapper\"]);\n    cssStateManager.useProperty(secure,\"secure\");\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>{children}</div>\n            <style jsx>{`\n            .page-wrapper {\n                /* min-height: 600rem; */\n                width: 100%;\n                color: #333;\n                padding: 50rem 40rem;\n                padding-top: 50rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                flex-wrap: wrap;\n            }\n            .secure {\n\n            }\n            `}</style>\n        </>\n    );\n}","import { useCssStateManager } from \"../../../hooks/use_css_state_manager\";\nimport { useCustomRouter } from \"../../../hooks/use_custom_router\";\nimport { styledButton } from \"../button\";\nimport { TextButton } from \"../text-button\";\n\nexport type TextLinkProps = {\n    caption: string;\n    path: string;\n};\n\nexport default function TextLink({caption,path}:TextLinkProps) {\n    const router = useCustomRouter();\n\n    const handleClick = () => {\n        router.push(path);\n    };\n\n    return (\n        <>\n            <div className=\"text-link\">\n                <TextButton caption={caption} onClick={handleClick} />\n            </div>\n            <style jsx>{`\n            .text-link {\n                display: inline-block;\n            }\n            `}</style>\n        </>\n    );\n}","import { ReactElement } from \"react\";\nimport { useSmartState } from \"../../hooks/use_smart_state\";\nimport { useCustomRouter } from \"../../hooks/use_custom_router\";\nimport { consumeAccount } from \"../../hooks/use_account\";\nimport { libAccountTestMode } from \"../../lib/account-test-mode\";\n\nexport function unsecurePage<T>(Component: (props: {}) => ReactElement) {\n    return function() {\n        const show = useSmartState(false);\n        const router = useCustomRouter();\n    \n        consumeAccount((accountValue) => {\n            if (accountValue) {\n                router.push(\"/account\");\n            }\n            else {\n                show.value = true;\n            }\n        });\n    \n        return show.value?<Component />:<div style={{height: \"1000rem\"}}></div>;\n    };\n};","import { FormRequestMakeup } from \"../types\";\n\ntype NameValues = {\n    email: string;\n    password: string;\n    confirm: string;\n};\n\nconst _formRequestRegister: FormRequestMakeup<NameValues> = {\n    trimValues: [\"email\"],\n    validation: ({password,confirm}) => {\n        if (password!==confirm) {\n            return {\n                message: \"The password and confirmation do not match\",\n                inputNames: [\"password\",\"confirm\"]\n            };\n        }\n    },\n    inputs: {\n        email: {\n            caption: \"Email\",\n            required: true,\n            validation: \"email\"\n        },\n        password: {\n            caption: \"Password\",\n            required: true,\n            validation: \"min:6\"\n        },\n        confirm: {\n            caption: \"Confirm\",\n            required: true,\n            validation: \"min:6\"\n        }\n    },\n    relativeUrl: \"/users/register?action=register\",\n};\n\nexport const formRequestRegister = _formRequestRegister as FormRequestMakeup;","import { unsecurePage } from \"../components/common/unsecure_page\";\nimport Page from \"../components/common/form/page\";\nimport Form from \"../components/common/form/form\";\nimport { formRequestRegister } from \"../lib/shared/form-request-makeup/requests/register\";\nimport Title from \"../components/common/form/title\";\nimport Box from \"../components/common/form/box\";\nimport P from \"../components/common/form/p\";\nimport TextLink from \"../components/common/form/text-link\";\nimport Input from \"../components/common/form/input\";\nimport SubmitButton from \"../components/common/form/submit-button\";\nimport { useCustomRouter } from \"../hooks/use_custom_router\";\nimport { libAccountTestMode } from \"../lib/account-test-mode\";\nimport { useEffect } from \"react\";\n\nexport type RegisterPageProps = {\n};\n\nconst RegisterPage = unsecurePage(function({}:RegisterPageProps) {\n    return (\n        <Page>\n            <Form \n                requestMakeup={formRequestRegister}\n                autoFocus\n                align=\"center\"\n                input={{\n                    maxWidth: 400,\n                    captionPosition: \"placeholder\"\n                }}\n                onSuccess={() => {\n                    return {\n                        type: \"redirect\",\n                        path: \"/register/verification\"\n                    };\n                }}\n            >\n                <Title>Register</Title>\n                <Box>\n                    <P>\n                        Already have an account? <TextLink path=\"/login\" caption=\"Login\" />\n                    </P>\n                    <Input name=\"email\" />\n                    <Input name=\"password\" type=\"password\" />\n                    <Input name=\"confirm\" type=\"password\" />\n                    <SubmitButton caption=\"Register\" />\n                </Box>\n            </Form>                    \n        </Page>    \n    );    \n});\n\nexport default RegisterPage;"],"names":["window","__NEXT_P","push","Page","children","secure","cssStateManager","useCssStateManager","useProperty","div","getClassNames","TextLink","caption","path","router","useCustomRouter","TextButton","onClick","unsecurePage","Component","show","useSmartState","consumeAccount","accountValue","value","style","height","formRequestRegister","trimValues","validation","password","confirm","message","inputNames","inputs","email","required","relativeUrl","Form","requestMakeup","autoFocus","align","input","maxWidth","captionPosition","onSuccess","type","Title","Box","P","Input","name","SubmitButton"],"sourceRoot":""}