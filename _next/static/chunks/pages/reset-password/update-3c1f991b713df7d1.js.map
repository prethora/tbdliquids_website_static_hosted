{"version":3,"file":"static/chunks/pages/reset-password/update-3c1f991b713df7d1.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,yBACA,WACE,OAAO,EAAQ,U,4GCGR,SAASC,EAAK,G,IAACC,EAAD,EAACA,SAAQ,EAAT,EAAUC,OAAAA,OAAM,IAAG,GAAI,EAC1CC,GAAkBC,EAAAA,EAAAA,GAAmB,CAAC,iBAE5C,OADAD,EAAgBE,YAAYH,EAAO,WAE/B,sB,WACI,SAACI,MAAG,C,mCAAYH,EAAgBI,iBAAe,I,SAAGN,K,gyBC+BjDO,EAnCoD,CAC7DC,WAAY,YACR,GADkB,EAARC,WAAgB,EAAPC,QAEf,MAAO,CACHC,QAAS,6CACTC,WAAY,CAAC,WAAW,aAIpCC,OAAQ,CACJC,GAAI,CACAC,QAAS,KACTC,UAAU,GAEdP,SAAU,CACNM,QAAS,WACTC,UAAU,EACVR,WAAY,SAEhBE,QAAS,CACLK,QAAS,UACTC,UAAU,EACVR,WAAY,UAGpBS,WAAY,CACR,eAAgB,kEAChB,iBAAkB,uEAClB,QAAW,wEACX,YAAa,qDACb,QAAS,iDAEbC,YAAa,sC,UCzBF,SAASC,EAAwB,KAA+B,OAA/B,KAA+B,sD,IACrEC,EAAcC,EAAAA,EAAAA,iBAChBP,EAAKM,EAAgB,GACrBE,EAAUF,EAAmB,MAMjC,OALME,GAAcR,IAChBA,EAAK,aACLQ,EAAU,UAIV,SAACvB,EAAAA,EAAI,C,UACD,UAACwB,EAAAA,GAAI,CACDC,cAAejB,EACfkB,WAAS,EACTC,MAAM,SACNC,MAAO,CACHC,SAAU,IACVC,gBAAiB,eAErBC,UAAW,Y,IAAGC,EAAa,EAAbA,KAAQC,MAClB,MAAO,CACHC,KAAM,WACNC,KAAM,gBAA0C,OAA1BC,mBAAmBH,MAGjDI,aAAcd,E,WAEd,SAACe,EAAAA,EAAK,C,SAAC,oBACP,UAACC,EAAAA,EAAG,C,WACA,SAACC,EAAAA,EAAC,C,SAAC,yEAGH,SAACC,EAAAA,EAAK,CAACC,KAAK,KAAKR,KAAK,SAASS,aAAc5B,KAC7C,SAAC0B,EAAAA,EAAK,CAACC,KAAK,WAAWR,KAAK,cAC5B,SAACO,EAAAA,EAAK,CAACC,KAAK,UAAUR,KAAK,cAC3B,SAACU,EAAAA,EAAY,CAAC5B,QAAQ,qB","sources":["webpack://_N_E/?f90f","webpack://_N_E/./components/common/form/page.tsx","webpack://_N_E/./lib/shared/form-request-makeup/requests/reset-password.ts","webpack://_N_E/./pages/reset-password/update.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/reset-password/update\",\n      function () {\n        return require(\"private-next-pages/reset-password/update.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/reset-password/update\"])\n      });\n    }\n  ","import { useCssStateManager } from \"../../../hooks/use_css_state_manager\";\n\nexport type PageProps = {\n    children: any;\n    secure?: boolean;\n};\n\nexport default function Page({children,secure = true}:PageProps) {\n    const cssStateManager = useCssStateManager([\"page-wrapper\"]);\n    cssStateManager.useProperty(secure,\"secure\");\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>{children}</div>\n            <style jsx>{`\n            .page-wrapper {\n                /* min-height: 600rem; */\n                width: 100%;\n                color: #333;\n                padding: 50rem 40rem;\n                padding-top: 50rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                flex-wrap: wrap;\n            }\n            .secure {\n\n            }\n            `}</style>\n        </>\n    );\n}","import { FormRequestMakeup } from \"../types\";\n\ntype NameValues = {\n    id: string;\n    password: string;\n    confirm: string;\n};\n\nconst _formRequestResetPassword: FormRequestMakeup<NameValues> = {\n    validation: ({password,confirm}) => {\n        if (password!==confirm) {\n            return {\n                message: \"The password and confirmation do not match\",\n                inputNames: [\"password\",\"confirm\"]\n            };\n        }\n    },\n    inputs: {\n        id: {\n            caption: \"ID\",\n            required: true\n        },\n        password: {\n            caption: \"Password\",\n            required: true,\n            validation: \"min:6\"\n        },\n        confirm: {\n            caption: \"Confirm\",\n            required: true,\n            validation: \"min:6\"\n        }\n    },\n    errorTable: {\n        \"already-used\": \"This reset link has already been used and cannot be used again.\",\n        \"no-user-record\": \"The user account associated with this reset link could not be found.\",\n        \"expired\": \"This reset link has expired. Use the form below to request a new one.\",\n        \"no-record\": \"This reset link does not match any of our records.\",\n        \"no-id\": \"This link has no id parameter and is invalid.\"\n    },\n    relativeUrl: \"/users/login?action=reset_password\",\n};\n\nexport const formRequestResetPassword = _formRequestResetPassword as FormRequestMakeup;","import { useRouter } from \"next/router\";\nimport Box from \"../../components/common/form/box\";\nimport Form from \"../../components/common/form/form\";\nimport Input from \"../../components/common/form/input\";\nimport P from \"../../components/common/form/p\";\nimport Page from \"../../components/common/form/page\";\nimport SubmitButton from \"../../components/common/form/submit-button\";\nimport Title from \"../../components/common/form/title\";\nimport { formRequestResetPassword } from \"../../lib/shared/form-request-makeup/requests/reset-password\";\nimport { AccountUser } from \"../../hooks/use_account\";\nimport { misc } from \"../../lib/misc\";\n\nexport type ResetPasswordUpdatePageProps = {\n};\n\nexport default function ResetPasswordUpdatePage({}:ResetPasswordUpdatePageProps) {\n    const queryParams = misc.getQueryParams();\n    let id = queryParams[\"id\"];\n    let errorId = queryParams[\"error\"];\n    if ((!errorId) && (!id)) {\n        id = \"invalid_id\";\n        errorId = \"no-id\";\n    }\n\n    return (\n        <Page>\n            <Form \n                requestMakeup={formRequestResetPassword}\n                autoFocus\n                align=\"center\"\n                input={{\n                    maxWidth: 400,\n                    captionPosition: \"placeholder\"\n                }}\n                onSuccess={({ user: { email } }: { user: AccountUser }) => {\n                    return {\n                        type: \"redirect\",\n                        path: `/login?reset=${encodeURIComponent(email)}`\n                    };\n                }}\n                initialError={errorId}\n            >\n                <Title>Reset Password</Title>\n                <Box>\n                    <P>\n                        Enter a new password and confirmation below to reset your password.\n                    </P>\n                    <Input name=\"id\" type=\"hidden\" initialValue={id} />\n                    <Input name=\"password\" type=\"password\" />\n                    <Input name=\"confirm\" type=\"password\" />\n                    <SubmitButton caption=\"Reset\" />\n                </Box>\n            </Form>                    \n        </Page>    \n    );    \n}"],"names":["window","__NEXT_P","push","Page","children","secure","cssStateManager","useCssStateManager","useProperty","div","getClassNames","formRequestResetPassword","validation","password","confirm","message","inputNames","inputs","id","caption","required","errorTable","relativeUrl","ResetPasswordUpdatePage","queryParams","misc","errorId","Form","requestMakeup","autoFocus","align","input","maxWidth","captionPosition","onSuccess","user","email","type","path","encodeURIComponent","initialError","Title","Box","P","Input","name","initialValue","SubmitButton"],"sourceRoot":""}