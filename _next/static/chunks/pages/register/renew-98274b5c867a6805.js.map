{"version":3,"file":"static/chunks/pages/register/renew-98274b5c867a6805.js","mappings":"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","sources":["webpack://_N_E/?e78b","webpack://_N_E/./components/common/unsecure_page.tsx","webpack://_N_E/./hooks/use_status_message.tsx","webpack://_N_E/./lib/api/users/register.ts","webpack://_N_E/./pages/register/renew.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/register/renew\",\n      function () {\n        return require(\"private-next-pages/register/renew.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/register/renew\"])\n      });\n    }\n  ","import { ReactElement } from \"react\";\nimport { useSmartState } from \"../../hooks/use_smart_state\";\nimport { useCustomRouter } from \"../../hooks/use_custom_router\";\nimport { consumeAccount } from \"../../hooks/use_account\";\nimport { libAccountTestMode } from \"../../lib/account-test-mode\";\n\nexport function unsecurePage<T>(Component: (props: {}) => ReactElement) {\n    return function() {\n        const show = useSmartState(false);\n        const router = useCustomRouter();\n    \n        consumeAccount((accountValue) => {\n            if (accountValue) {\n                router.push(\"/account\");\n            }\n            else {\n                show.value = true;\n            }\n        });\n    \n        return show.value?<Component />:<div style={{height: \"1000rem\"}}></div>;\n    };\n};","import { CSSProperties, useContext, useEffect, useRef } from \"react\";\nimport { LayoutStateContext } from \"../contexts/layout_state\";\nimport { useCssStateManager } from \"./use_css_state_manager\";\nimport { useResizeObserver } from \"./use_resize_observer\";\nimport { useSmartState } from \"./use_smart_state\";\n\nexport type StatusMessageType = \"error\" | \"info\";\n\ntype StatusMessageProps = {\n    color: string;\n    message: string;\n    show: boolean;\n};\n\nexport type StatusMessage = {\n    type: \"info\" | \"error\";\n    message: string;\n    permanent?: boolean;\n};\n\nfunction StatusMessage({color,message,show}:StatusMessageProps)\n{\n    const cssStateManager = useCssStateManager([\"status-message\"]);\n    const showRef = useRef(show);\n    showRef.current = show;\n\n    const { scalePixelToRem } = useContext(LayoutStateContext);\n\n    const height = useSmartState(0);\n    const innerRef = useResizeObserver(() => {\n        if (showRef.current) {\n            syncHeightToInner();\n        }\n    });\n\n    const syncHeightToInner = () => {\n        if (innerRef.current) {\n            const { current: innerElem } = innerRef;\n            height.value = scalePixelToRem(innerElem.offsetHeight);            \n        }\n    };\n\n    useEffect(() => {\n        if (show) {\n            syncHeightToInner();\n        }\n        else {\n            height.value = 0;\n        }\n    },[show])\n\n    const styles: CSSProperties = {\n        height: `${height.value}rem`,\n        color\n    };\n\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()} style={styles}>\n                <div ref={innerRef} className=\"inner\">\n                    {message}\n                </div>                \n            </div>\n            <style jsx>{`\n            .status-message {\n                overflow: hidden;\n                transition: height 0.4s;\n                font-weight: 600;\n            }\n\n            .inner {\n                width: 100%;\n                text-align: center;\n                padding-bottom: 25rem;\n            }\n\n            `}</style>\n        </>\n    );\n}\n\nlet loadedStatusMessage: StatusMessage;\n\nexport const useStatusMessage = (headless = false) => {\n    const color  = useSmartState(\"\");\n    const message = useSmartState(\"This is the test message\");\n    const show  = useSmartState(false);\n    const closeAfterTimeoutHandle = useRef(0);    \n\n    const defaultColorTable = {\n        \"error\": \"#dc0303\",\n        \"info\": \"#7c79e4\"\n    };    \n\n    const component = <StatusMessage message={message.value} show={show.value} color={color.value} />;\n\n    useEffect(() => {\n        if ((loadedStatusMessage) && (!headless)) {\n            const copy = loadedStatusMessage;\n            loadedStatusMessage = null;\n            ret.showFromObject(copy);\n        }\n    },[]);\n\n    const ret = {\n        component,\n        loadMessage(message: StatusMessage){\n            loadedStatusMessage = message;\n        },\n        show(messageValue: string,{closeAfterMs = -1,colorValue = defaultColorTable[\"info\"]}: {closeAfterMs?: number;colorValue?: string} = {}){\n            clearTimeout(closeAfterTimeoutHandle.current);\n            closeAfterTimeoutHandle.current = 0;\n            color.value = colorValue;\n            message.value = messageValue;\n            show.value = true;\n            if (closeAfterMs>0) {\n                closeAfterTimeoutHandle.current = setTimeout(() => {\n                    ret.close();\n                },closeAfterMs) as unknown as number;\n            }\n        },\n        showFromObject({type,message,permanent}: StatusMessage) {\n            if (type===\"info\") {\n                ret.showInfo(message,!!permanent);\n            }\n            else {\n                ret.showError(message,(permanent===undefined) || permanent);\n            }\n        },\n        showError(messageValue: string,permanent = true) {\n            ret.show(messageValue,{\n                colorValue: defaultColorTable[\"error\"],\n                ...(permanent?{}:{closeAfterMs: 7000})\n            });\n        },\n        showInfo(messageValue: string,permanent = false) {\n            ret.show(messageValue,{\n                colorValue: defaultColorTable[\"info\"],\n                ...(permanent?{}:{closeAfterMs: 7000})\n            });\n        },\n        close() {\n            show.value = false;\n        }\n    };\n\n    return ret;\n};","import serverRefs from \"../../../server-refs.json\";\n\nclass UserRegisterApi {\n    async register(email: string,password: string) {\n        const baseUrl = (process.env.NODE_ENV===\"development\")?\"http://localhost:9000\":serverRefs.apis.api;\n        let url = `${baseUrl}/users/register?action=register`;\n\n        const res = await fetch(url,{\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                \"email\": email,\n                \"password\": password\n            })\n        });\n        const jsonRes = await res.json();\n        if (jsonRes?.type===\"error\") {\n            throw new Error(jsonRes?.errorMessage || \"Unexpected response from server\");\n        }\n        else if (jsonRes?.type===\"success\") {\n            return;\n        }\n        else {\n            throw new Error(\"Unexpected response from server\");\n        }\n    }\n\n    async renewVerification(id: string) {\n        const baseUrl = (process.env.NODE_ENV===\"development\")?\"http://localhost:9000\":serverRefs.apis.api;\n        let url = `${baseUrl}/users/register?action=renew_verification`;\n\n        const res = await fetch(url,{\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                id\n            })\n        });\n        const jsonRes = await res.json();\n        if (jsonRes?.type===\"error\") {\n            throw new Error(jsonRes?.errorMessage || \"Unexpected response from server\");\n        }\n        else if (jsonRes?.type===\"success\") {\n            return;\n        }\n        else {\n            throw new Error(\"Unexpected response from server\");\n        }\n    }\n}\n\nexport const apiUserRegisterApi = new UserRegisterApi();","import { styledButton } from \"../../components/common/button\";\nimport { unsecurePage } from \"../../components/common/unsecure_page\";\nimport { routerTransition } from \"../../components/core/router_transition\";\nimport { useCssStateManager } from \"../../hooks/use_css_state_manager\";\nimport { useSmartState } from \"../../hooks/use_smart_state\";\nimport { useStatusMessage } from \"../../hooks/use_status_message\";\nimport { apiUserRegisterApi } from \"../../lib/api/users/register\";\nimport { misc } from \"../../lib/misc\";\n\nconst Button = styledButton({ display: \"inline-block\" });\n\nexport type RegisterRenewPageProps = {\n};\n\nconst RegisterRenewPage = unsecurePage(function({}:RegisterRenewPageProps){\n    const cssStateManager = useCssStateManager([\"register-renew-page\"]);\n    const hideBody = cssStateManager.useState(false,\"hide-body\");\n\n    const working = useSmartState(false);\n    const statusMessage = useStatusMessage();\n\n    const handleButtonClick = async () => {\n        statusMessage.close();\n        await routerTransition.run(async () => {\n            const id = misc.getParameterByName(\"id\");\n            await apiUserRegisterApi.renewVerification(id);\n        },{\n            working,\n            onCleanComplete: (errorMessage?: string) => {\n                if (errorMessage) {\n                    statusMessage.showError(errorMessage);\n                }\n                else {\n                    statusMessage.showInfo(\"A new verification email has been sent to the provided email address.\",true);\n                    hideBody.value = true;\n                }\n            },\n            dontChangeWorkingOnSuccess: true\n        });\n    };\n\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>\n                {statusMessage.component}\n                <div className=\"body\">\n                    <div className=\"text\">\n                        This activation link has expired. Click the button below to receive a new verification email.\n                    </div>\n                \n                    <Button \n                        caption=\"Resend Verification Email\" \n                        disabled={working.value} \n                        onClick={handleButtonClick}\n                    />\n                </div>\n            </div>\n            <style jsx>{`\n            .register-renew-page {\n                height: 600rem;\n                padding: 50rem 40rem;\n                line-height: 28rem;\n            }\n\n            .body {\n                --duration: 0.3s;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                opacity: 1;\n                visibility: visible;\n                transition: opacity var(--duration),visibility var(--duration);\n            }\n\n            .hide-body .body {\n                opacity: 0;\n                visibility: hidden;\n            }\n\n            .text {\n                max-width: 800rem;\n                text-align: center;\n                margin-bottom: 25rem;\n            }\n            `}</style>\n        </>\n    );\n});\n\nexport default RegisterRenewPage;"],"names":["window","__NEXT_P","push","unsecurePage","Component","show","useSmartState","router","useCustomRouter","consumeAccount","accountValue","value","div","style","height","loadedStatusMessage","StatusMessage","color","message","cssStateManager","useCssStateManager","showRef","useRef","current","useContext","LayoutStateContext","scalePixelToRem","innerRef","useResizeObserver","syncHeightToInner","innerElem","offsetHeight","useEffect","styles","getClassNames","ref","useStatusMessage","headless","closeAfterTimeoutHandle","defaultColorTable","component","copy","ret","showFromObject","loadMessage","messageValue","closeAfterMs","colorValue","clearTimeout","setTimeout","close","type","permanent","showInfo","showError","undefined","apiUserRegisterApi","UserRegisterApi","register","email","password","baseUrl","url","res","jsonRes","serverRefs","fetch","method","headers","body","JSON","stringify","json","Error","errorMessage","renewVerification","id","Button","styledButton","display","RegisterRenewPage","hideBody","useState","working","statusMessage","handleButtonClick","routerTransition","misc","onCleanComplete","dontChangeWorkingOnSuccess","caption","disabled","onClick"],"sourceRoot":""}