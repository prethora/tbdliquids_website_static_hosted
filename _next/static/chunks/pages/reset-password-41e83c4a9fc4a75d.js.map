{"version":3,"file":"static/chunks/pages/reset-password-41e83c4a9fc4a75d.js","mappings":"mFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,kBACA,WACE,OAAO,EAAQ,U,4GCGR,SAASC,EAAK,G,IAACC,EAAD,EAACA,SAAQ,EAAT,EAAUC,OAAAA,OAAM,IAAG,GAAI,EAC1CC,GAAkBC,EAAAA,EAAAA,GAAmB,CAAC,iBAE5C,OADAD,EAAgBE,YAAYH,EAAO,WAE/B,sB,WACI,SAACI,MAAG,C,mCAAYH,EAAgBI,iBAAe,I,SAAGN,K,2uBCF/C,SAASO,EAAS,G,IAACC,EAAD,EAACA,QAAQC,EAAT,EAASA,KAChCC,GAASC,EAAAA,EAAAA,KAMf,OACI,sB,WACI,SAACN,MAAG,C,qDACA,SAACO,EAAAA,EAAU,CAACJ,QAASA,EAASK,QAPtB,WAChBH,EAAOZ,KAAKW,S,0NCNL,SAASK,EAAO,G,MAAA,EAACC,KAAAA,OAAI,IAAG,aAAU,EAACC,EAAnB,EAAmBA,KACxCd,GAAkBC,EAAAA,EAAAA,GAAmB,CAAC,WAC5CD,EAAgBE,YAAmB,aAAPW,EAAkB,oBAC9Cb,EAAgBE,YAAmB,eAAPW,EAAoB,sBAChD,IAAME,GAAwB,kBACd,aAAR,EAAoB,CAACC,OAAQ,GAAQ,OAALF,EAAK,QAAM,CAACG,MAAO,GAAQ,OAALH,EAAK,SAAK,CACpEI,QAAiB,aAAR,EAAoB,QAAQ,iBAEzC,OAAO,SAACf,MAAG,CAACgB,MAAOJ,M,6GCVhB,SAASK,EAAgBC,GAC5B,OAAO,WACH,IAAMC,GAAOC,EAAAA,EAAAA,IAAc,GACrBf,GAASC,EAAAA,EAAAA,KAWf,OATAe,EAAAA,EAAAA,KAAe,SAACC,GACRA,EACAjB,EAAOZ,KAAK,YAGZ0B,EAAKI,OAAQ,KAIdJ,EAAKI,OAAM,SAACL,EAAS,KAAI,SAAClB,MAAG,CAACgB,MAAO,CAACH,OAAQ,gB,yMCFhDW,EAZ2D,CACpEC,YAAY,EACZC,OAAQ,CACJC,MAAO,CACHxB,QAAS,QACTyB,UAAU,EACVC,WAAY,UAGpBC,YAAa,8CCmCjB,GAnC0Bb,EAAAA,EAAAA,IAAa,SAAS,KAAyB,OAAzB,KAAyB,sDACrE,OACI,SAACvB,EAAAA,EAAI,C,UACD,UAACqC,EAAAA,GAAI,CACDC,cAAeR,EACfS,WAAS,EACTC,MAAM,SACNC,MAAO,CACHC,SAAU,IACVC,gBAAiB,eAErBC,UAAW,WACP,MAAO,CACH5B,KAAM,WACNN,KAAM,yB,WAId,SAACmC,EAAAA,EAAK,C,SAAC,oBACP,UAACC,EAAAA,EAAG,C,WACA,SAACC,EAAAA,EAAC,C,SAAC,wFAGH,SAACC,EAAAA,EAAK,CAACC,KAAK,WACZ,SAACC,EAAAA,EAAY,CAACzC,QAAQ,oBACtB,SAACM,EAAAA,EAAM,CAACE,KAAM,MACd,UAAC8B,EAAAA,EAAC,C,UAAC,8BAC2B,SAACvC,EAAAA,EAAQ,CAACE,KAAK,SAASD,QAAQ,UAAU,oB","sources":["webpack://_N_E/?bc31","webpack://_N_E/./components/common/form/page.tsx","webpack://_N_E/./components/common/form/text-link.tsx","webpack://_N_E/./components/common/spacer.tsx","webpack://_N_E/./components/common/unsecure_page.tsx","webpack://_N_E/./lib/shared/form-request-makeup/requests/reset-password-request.ts","webpack://_N_E/./pages/reset-password.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/reset-password\",\n      function () {\n        return require(\"private-next-pages/reset-password.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/reset-password\"])\n      });\n    }\n  ","import { useCssStateManager } from \"../../../hooks/use_css_state_manager\";\n\nexport type PageProps = {\n    children: any;\n    secure?: boolean;\n};\n\nexport default function Page({children,secure = true}:PageProps) {\n    const cssStateManager = useCssStateManager([\"page-wrapper\"]);\n    cssStateManager.useProperty(secure,\"secure\");\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>{children}</div>\n            <style jsx>{`\n            .page-wrapper {\n                /* min-height: 600rem; */\n                width: 100%;\n                color: #333;\n                padding: 50rem 40rem;\n                padding-top: 50rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                flex-wrap: wrap;\n            }\n            .secure {\n\n            }\n            `}</style>\n        </>\n    );\n}","import { useCssStateManager } from \"../../../hooks/use_css_state_manager\";\nimport { useCustomRouter } from \"../../../hooks/use_custom_router\";\nimport { styledButton } from \"../button\";\nimport { TextButton } from \"../text-button\";\n\nexport type TextLinkProps = {\n    caption: string;\n    path: string;\n};\n\nexport default function TextLink({caption,path}:TextLinkProps) {\n    const router = useCustomRouter();\n\n    const handleClick = () => {\n        router.push(path);\n    };\n\n    return (\n        <>\n            <div className=\"text-link\">\n                <TextButton caption={caption} onClick={handleClick} />\n            </div>\n            <style jsx>{`\n            .text-link {\n                display: inline-block;\n            }\n            `}</style>\n        </>\n    );\n}","import { CSSProperties } from \"react\";\nimport { useCssStateManager } from \"../../hooks/use_css_state_manager\";\n\nexport type SpacerProps = {\n    type?: \"vertical\" | \"horizontal\";\n    size: number;\n};\n\nexport default function Spacer({type = \"vertical\",size}:SpacerProps) {\n    const cssStateManager = useCssStateManager([\"spacer\"]);\n    cssStateManager.useProperty(type===\"vertical\",\"type-is-vertical\");\n    cssStateManager.useProperty(type===\"horizontal\",\"type-is-horizontal\");\n    const styles: CSSProperties = {\n        ...((type===\"vertical\")?{height: `${size}rem`}:{width: `${size}rem`}),\n        display: (type===\"vertical\")?\"block\":\"inline-block\"\n    };\n    return <div style={styles}></div>;\n}","import { ReactElement } from \"react\";\nimport { useSmartState } from \"../../hooks/use_smart_state\";\nimport { useCustomRouter } from \"../../hooks/use_custom_router\";\nimport { consumeAccount } from \"../../hooks/use_account\";\nimport { libAccountTestMode } from \"../../lib/account-test-mode\";\n\nexport function unsecurePage<T>(Component: (props: {}) => ReactElement) {\n    return function() {\n        const show = useSmartState(false);\n        const router = useCustomRouter();\n    \n        consumeAccount((accountValue) => {\n            if (accountValue) {\n                router.push(\"/account\");\n            }\n            else {\n                show.value = true;\n            }\n        });\n    \n        return show.value?<Component />:<div style={{height: \"1000rem\"}}></div>;\n    };\n};","import { FormRequestMakeup } from \"../types\";\n\ntype NameValues = {\n    email: string;\n};\n\nconst _formRequestResetPasswordRequest: FormRequestMakeup<NameValues> = {\n    trimValues: true,\n    inputs: {\n        email: {\n            caption: \"Email\",\n            required: true,\n            validation: \"email\"\n        }\n    },\n    relativeUrl: \"/users/login?action=reset_password_request\",\n};\n\nexport const formRequestResetPasswordRequest = _formRequestResetPasswordRequest as FormRequestMakeup;","import { unsecurePage } from \"../components/common/unsecure_page\";\nimport Page from \"../components/common/form/page\";\nimport Form from \"../components/common/form/form\";\nimport Title from \"../components/common/form/title\";\nimport Box from \"../components/common/form/box\";\nimport P from \"../components/common/form/p\";\nimport Input from \"../components/common/form/input\";\nimport TextLink from \"../components/common/form/text-link\";\nimport SubmitButton from \"../components/common/form/submit-button\";\nimport Spacer from \"../components/common/spacer\";\nimport { formRequestResetPasswordRequest } from \"../lib/shared/form-request-makeup/requests/reset-password-request\";\n\nexport type ResetPasswordPageProps = {\n};\n\nconst ResetPasswordPage = unsecurePage(function({}:ResetPasswordPageProps) {\n    return (\n        <Page>\n            <Form \n                requestMakeup={formRequestResetPasswordRequest}\n                autoFocus\n                align=\"center\"\n                input={{\n                    maxWidth: 400,\n                    captionPosition: \"placeholder\"\n                }}\n                onSuccess={() => {\n                    return {\n                        type: \"redirect\",\n                        path: \"/reset-password/sent\"\n                    };\n                }}\n            >\n                <Title>Reset Password</Title>\n                <Box>\n                    <P>\n                        Enter your email address below and we will send you a link to reset your password.\n                    </P>\n                    <Input name=\"email\" />\n                    <SubmitButton caption=\"Get Reset Link\" />\n                    <Spacer size={20} />\n                    <P>\n                        Remembered your password? <TextLink path=\"/login\" caption=\"Login\" />.\n                    </P>\n                </Box>\n            </Form>                    \n        </Page>    \n    );    \n});\n\nexport default ResetPasswordPage;"],"names":["window","__NEXT_P","push","Page","children","secure","cssStateManager","useCssStateManager","useProperty","div","getClassNames","TextLink","caption","path","router","useCustomRouter","TextButton","onClick","Spacer","type","size","styles","height","width","display","style","unsecurePage","Component","show","useSmartState","consumeAccount","accountValue","value","formRequestResetPasswordRequest","trimValues","inputs","email","required","validation","relativeUrl","Form","requestMakeup","autoFocus","align","input","maxWidth","captionPosition","onSuccess","Title","Box","P","Input","name","SubmitButton"],"sourceRoot":""}