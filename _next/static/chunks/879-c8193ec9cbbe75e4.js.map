{"version":3,"file":"static/chunks/879-c8193ec9cbbe75e4.js","mappings":"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","sources":["webpack://_N_E/./components/pages/collection/collection_dropdown_menu.tsx","webpack://_N_E/./components/pages/collection/collection-nav-bar.tsx"],"sourcesContent":["import { useContext, useEffect, useRef } from \"react\";\nimport { WindowSizeContext } from \"../../../contexts/window_size\";\nimport { useCachedValue } from \"../../../hooks/use_cached_value\";\nimport { useCssStateManager } from \"../../../hooks/use_css_state_manager\";\nimport { useDesktopScrollbar } from \"../../../hooks/use_desktop_scrollbar\";\nimport { useResizeObserver } from \"../../../hooks/use_resize_observer\";\nimport { useSmartState } from \"../../../hooks/use_smart_state\";\nimport { prebuildData } from \"../../../lib/prebuild-data\";\nimport { EventPane } from \"../../core/event_pane\";\nimport { Icon } from \"../../core/icon\";\n\nexport type CollectionDropdownMenuProps = {\n    open: boolean;\n    collectionItems: {handle: string;caption: string}[];\n    collectionHandle: string;\n    collectionDropdownCloseClickHandler?: () => void;\n    collectionDropdownItemClickHandler?: (handle: string) => void;\n};\n\nexport default function CollectionDropdownMenu({\n            open,\n            collectionItems,\n            collectionHandle,\n            collectionDropdownCloseClickHandler = () => {},\n            collectionDropdownItemClickHandler = () => {}\n        }:CollectionDropdownMenuProps)\n{\n    const windowSize = useContext(WindowSizeContext);\n    const dropdownMenuHeight = useSmartState(0);\n\n    const cssStateManager = useCssStateManager([\"container\"]);    \n    cssStateManager.useProperty(open,\"open\");\n    cssStateManager.useProperty(dropdownMenuHeight.value<=windowSize.height,\"dropdown-menu-centered\");\n\n    const { ref: scrollerRef,className: scrollerClassName,injectedStyles: scrollerInjectedStyles,styles: scrollerStyles } = useDesktopScrollbar();\n\n    const refDropdownMenuOnResize = useResizeObserver(({height}) => {\n        dropdownMenuHeight.value = height;\n    });\n\n    const collectionRoutes = useCachedValue(() => {\n        const ret: {[handle: string]: string} = {};\n        collectionItems.forEach(({handle}) => {\n            const collectionItem = prebuildData.getCollectionByHandle(handle);\n            ret[handle] = collectionItem.route.split(\"{handle}\").join(handle)            \n        });\n        return ret;\n    },\"collections\");\n\n    const { mobileCollectionPopupMenu: { backgroundColor,color,highlightColor,hoverColor } } = prebuildData.getActiveTheme();\n\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>                \n                <div className={`scroller ${scrollerClassName}`} ref={scrollerRef} style={scrollerStyles} >\n                    <div ref={refDropdownMenuOnResize} className=\"menu\">\n                        {collectionItems.map(({handle,caption}) => (\n                            <div key={handle} className={\"item\"+((handle===collectionHandle)?\" selected\":\"\")}>\n                                {caption}\n                                <EventPane onClick={() => collectionDropdownItemClickHandler(handle)} seoLinkUrl={collectionRoutes[handle]} />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <div className=\"close-button\">\n                    <Icon name=\"navbar-cross\" size={20} />\n                    <EventPane onClick={collectionDropdownCloseClickHandler} />\n                </div>                \n            </div>\n            <style jsx>{`\n            .container {\n                position: fixed;\n                left: 0rem;\n                top: 0rem;\n                width: 100%;\n                height: 100%;\n                background-color: ${backgroundColor};\n                z-index: 104;\n                opacity: 0;\n                visibility: hidden;\n                transform: translateY(150rem);\n                --duration: 0.25s;\n                transition: opacity var(--duration),visibility var(--duration),transform var(--duration);\n            }\n\n            .container.open {\n                opacity: 1;\n                visibility: visible;\n                transform: translateY(0rem);\n            }\n\n            .scroller {\n                position: absolute;\n                left: 0rem;\n                top: 0rem;\n                width: 100%;\n                height: 100%;                \n                display: flex;\n                flex-direction: column;\n                justify-content: start;\n                overflow: auto;\n            }\n\n            .dropdown-menu-centered .scroller {\n                justify-content: center;\n                overflow: hidden;\n            }\n\n            .scroller .menu {\n                padding: 0rem 74rem;\n            }\n\n            .scroller .item {\n                font-size: 20rem;\n                font-weight: 500;\n                text-align: center;\n                padding: 16rem 0rem;\n                color: ${color};\n                position: relative;\n                --duration: 0.3s;\n                transition: background-color var(--duration),color var(--duration);\n            }\n\n            .scroller .item.touchdown {\n                background-color: rgba(0,0,0,0.02);\n            }\n\n            .scroller .item.hover {\n                color: ${hoverColor};\n            }\n\n            .scroller .item.selected.hover {\n                color: ${highlightColor};\n            }\n\n            .scroller .item.selected {\n                color: ${highlightColor};\n                font-weight: 600;\n            }\n\n            .close-button {\n                position: absolute;\n                right: 5rem;\n                top: 0rem;\n                color: #888;\n                padding: 20rem 25rem;\n                --duration: 0.3s;\n                transition: background-color var(--duration),color var(--duration);\n            }\n\n            .close-button.touchdown {\n                background-color: rgba(0,0,0,0.06);\n            }\n\n            .close-button.hover {\n                color: #adadad;                \n            }\n            `}</style>\n        </>\n    );\n}","import { useContext } from \"react\";\nimport { LayoutStateContext } from \"../../../contexts/layout_state\";\nimport { useCssStateManager } from \"../../../hooks/use_css_state_manager\";\nimport { useCustomRouter } from \"../../../hooks/use_custom_router\";\nimport { useSmartState } from \"../../../hooks/use_smart_state\";\nimport { prebuildData } from \"../../../lib/prebuild-data\";\nimport { ConfigCollectionData } from \"../../../lib/prebuild-data/types\";\nimport { EventPane } from \"../../core/event_pane\";\nimport { Icon } from \"../../core/icon\";\nimport CollectionDropdownMenu from \"./collection_dropdown_menu\";\n\nexport type CollectionNavBarProps = {\n    leftIconName: string;\n    iconSize?: number;\n    rightIconName?: string;\n    leftIconClickHandler?: () => void;\n    rightIconClickHandler?: () => void;\n    leftIconSeoLinkUrl?: string;\n    collectionItem: ConfigCollectionData;\n    collectionItems: {handle: string;caption: string}[];\n};\n\nexport default function CollectionNavBar({\n        leftIconName,\n        iconSize = 30,\n        rightIconName,\n        leftIconSeoLinkUrl,\n        leftIconClickHandler = () => {},\n        rightIconClickHandler = () => {},\n        collectionItem,\n        collectionItems,\n    }:CollectionNavBarProps)\n{\n    const cssStateManager = useCssStateManager([\"collection-nav-bar\"]);\n\n    const dropdownMenuOpen = useSmartState(false);\n    const { page,collectionSearchBarOpen,mobileDetect: { miniWidthCutoff } } = useContext(LayoutStateContext);\n    const router = useCustomRouter();\n\n    cssStateManager.useProperty(collectionSearchBarOpen.value,\"search-bar-open\");\n    cssStateManager.useProperty(!!rightIconName,\"has-right-icon\");\n\n    const collectionDropdownClickHandler = () => {\n        dropdownMenuOpen.value = true;\n        page.hideOverlayScrollbar();\n    };\n\n    const collectionDropdownCloseClickHandler = () => {\n        dropdownMenuOpen.value = false;\n        page.showOverlayScrollbar();\n    };\n\n    const collectionDropdownItemClickHandler = (handle: string) => {\n        collectionDropdownCloseClickHandler();\n        const collectionItem = prebuildData.getCollectionByHandle(handle);\n        if (collectionItem)\n        {\n            const route = collectionItem.route.split(\"{handle}\").join(handle);\n            router.push(route);\n        }            \n    };\n\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>\n                <div className=\"left-open-button\">\n                    <Icon name={leftIconName} size={iconSize} />\n                    <EventPane onClick={leftIconClickHandler} {...(leftIconSeoLinkUrl?{seoLinkUrl: leftIconSeoLinkUrl}:{})} />\n                </div>\n                <div className=\"collection-title-dropdown\">\n                    {collectionItem.caption}\n                    <div className=\"arrow-icon\">\n                        <Icon name=\"navbar-right-arrow\" size={18} />\n                    </div>\n                    <EventPane onClick={collectionDropdownClickHandler} />\n                </div>\n                {rightIconName?\n                    (\n                        <div className=\"right-open-button\">\n                            <Icon name={rightIconName} size={iconSize} />\n                            <EventPane onClick={rightIconClickHandler} />\n                        </div>\n                    ):\"\"}                \n            </div>\n            <CollectionDropdownMenu\n                open={dropdownMenuOpen.value}\n                collectionHandle={collectionItem.seo.handle}\n                collectionItems={collectionItems}\n                collectionDropdownCloseClickHandler={collectionDropdownCloseClickHandler}\n                collectionDropdownItemClickHandler={collectionDropdownItemClickHandler}\n            />\n            <style jsx>{`\n            .collection-nav-bar {\n                display: flex;\n                align-items: center;         \n                --duration: var(--search-open-duration);\n            }\n\n            .left-open-button,.collection-title-dropdown {\n                opacity: 1;\n                visibility: visible;\n            }\n\n            .search-bar-open .left-open-button ,.search-bar-open .collection-title-dropdown {\n                opacity: 0;\n                visibility: hidden;\n            }\n\n            .left-open-button {\n                padding: 5rem 12rem;\n                position: relative;\n                transition: background-color 0.2s,color 0.3s,opacity var(--duration),visibility var(--duration);\n                color: #333;\n            }\n\n            .right-open-button {\n                padding: 5rem 12rem;\n                position: relative;\n                transition: background-color 0.2s,color 0.3s;\n                color: #333;\n            }\n\n            .left-open-button.touchdown,.collection-title-dropdown.touchdown,.right-open-button.touchdown {\n                background-color: #eaeaea;\n            }\n\n            .left-open-button.hover {\n                color: #999;\n            }\n\n            .collection-title-dropdown.hover {\n                background-color: #efefef;\n            }\n\n            .collection-title-dropdown {\n                border: 2rem solid #444444;\n                flex: 1 0;\n                text-align: center;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;                \n                border-radius: 5rem;\n                margin: 0rem 4rem;\n                height: 41rem;                \n                position: relative;\n                padding-right: 20rem;\n                transition: background-color 0.3s,opacity var(--duration),visibility var(--duration);\n            }\n\n            .collection-title-dropdown .arrow-icon {\n                position: absolute;\n                right: 12rem;\n                top: 8rem;\n                transform: rotate(90deg) scaleX(0.7);\n                color: #999;\n            }\n\n            @media screen and (max-width: ${miniWidthCutoff}px) {\n                .has-right-icon .collection-title-dropdown {\n                    font-size: 13rem;   \n                }\n            }\n\n            `}</style>\n        </>\n    );\n}"],"names":["CollectionDropdownMenu","open","collectionItems","collectionHandle","collectionDropdownCloseClickHandler","collectionDropdownItemClickHandler","windowSize","useContext","WindowSizeContext","dropdownMenuHeight","useSmartState","cssStateManager","useCssStateManager","useProperty","value","height","useDesktopScrollbar","ref","className","styles","injectedStyles","refDropdownMenuOnResize","useResizeObserver","collectionRoutes","useCachedValue","ret","forEach","handle","collectionItem","prebuildData","route","split","join","mobileCollectionPopupMenu","backgroundColor","color","highlightColor","hoverColor","div","getClassNames","scrollerRef","style","scrollerStyles","scrollerClassName","map","caption","EventPane","onClick","seoLinkUrl","Icon","name","size","CollectionNavBar","leftIconName","iconSize","rightIconName","leftIconSeoLinkUrl","leftIconClickHandler","rightIconClickHandler","dropdownMenuOpen","LayoutStateContext","page","collectionSearchBarOpen","mobileDetect","miniWidthCutoff","router","useCustomRouter","showOverlayScrollbar","hideOverlayScrollbar","seo","push"],"sourceRoot":""}