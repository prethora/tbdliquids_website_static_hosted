{"version":3,"file":"static/chunks/350-9f7f263c31b8d5fc.js","mappings":"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pBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EA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","sources":["webpack://_N_E/./components/common/form/form.tsx","webpack://_N_E/./node_modules/postcode-validator/lib/esm/postcode-types.js","webpack://_N_E/./node_modules/postcode-validator/lib/esm/postcode-regexes.js","webpack://_N_E/./lib/shared/lib/country-makeup.ts","webpack://_N_E/./node_modules/postcode-validator/lib/esm/main.js","webpack://_N_E/./node_modules/string-similarity/src/index.js"],"sourcesContent":["import { MutableRefObject, createContext, forwardRef, useCallback, useContext, useEffect, useImperativeHandle, useRef } from \"react\";\nimport { useCssStateManager } from \"../../../hooks/use_css_state_manager\";\nimport { SmartState, useSmartState } from \"../../../hooks/use_smart_state\";\nimport { StatusMessage, useStatusMessage } from \"../../../hooks/use_status_message\";\nimport { misc } from \"../../../lib/misc\";\nimport { FormError, FormRequestMakeup, FormRequestMakeupInput, FormValues } from \"../../../lib/shared/form-request-makeup/types\";\nimport { RedirectDirective, useIsSecurePage } from \"../secure_page\";\nimport { RequestErrorCustom, RequestErrorNoNetworkConnection, RequestErrorPermissionDenied, postRequest } from \"../../../lib/server_requests\";\nimport { Account, consumeAccount, useAccount } from \"../../../hooks/use_account\";\nimport { useCustomRouter } from \"../../../hooks/use_custom_router\";\nimport { preprocessFromMakeup } from \"../../../lib/shared/form-request-makeup/preprocessing\";\nimport { useAccountBarParentNav } from \"../../account-bar\";\n\nexport type FormParent = {\n    caption: string;\n    path: string;\n};\n\nexport type FormInputCaptionPosition = \"header\" | \"placeholder\";\n\nexport type FormInput = {\n    maxWidth?: number;\n    captionPosition?: FormInputCaptionPosition;\n};\n\nexport type FormOnSuccessResultMessage = {\n    type: \"message\";\n    message: StatusMessage; \n};\n\nexport type FormOnSuccessResultRedirect = {\n    type: \"redirect\";\n} & RedirectDirective;\n\nexport type FormOnSuccessResult = FormOnSuccessResultMessage | FormOnSuccessResultRedirect;\nexport type FormAlignment = \"left\" | \"center\" | \"right\";\n\nexport type InitializeCBResult = {\n    autoFocus?: true | string;\n    inputInitialValues?: {\n        [name: string]: string\n    };\n    message?: string | {\n        value: string;\n        permanent?: boolean;\n    };\n};\n\nexport type FormProps = {\n    parent?: FormParent;\n    children?: any;\n    input?: FormInput;\n    autoFocus?: true | string;\n    requestMakeup?: FormRequestMakeup;\n    onSuccess?: (result?: unknown,name?: string) => FormOnSuccessResult | void;\n    align?: FormAlignment;\n    initializeCb?: () => InitializeCBResult | void;\n    initialError?: string;\n    invisible?: boolean;\n    alternateStatusMessage?: ReturnType<typeof useStatusMessage>;\n};\n\nclass FormInternalData {\n    private inputs: FormInputInterfaceTo[] = [];\n    private submit: FormSubmitInterfaceTo;\n    private namedSubmits: {\n        [name: string]: FormSubmitInterfaceTo;\n    } = {};\n    private valuesInitialized = false;\n\n    constructor(private formStateValue: FormState,private formRequestMakeup: FormRequestMakeup) {}\n\n    getFirstNonHiddenInput() {\n        return this.inputs.filter(({getIsHidden}) => !getIsHidden())[0];\n    }\n\n    getInputByName(name: string) {\n        return this.inputs.filter((interfaceTo) => interfaceTo.getName()===name)[0];\n    }\n\n    getInputHashByName() {\n        const ret: {[name: string]: FormInputInterfaceTo} = {};\n        this.inputs.forEach((interfaceTo) => {\n            ret[interfaceTo.getName()] = interfaceTo;\n        });\n        return ret;\n    }\n\n    getInputIndex(interfaceTo: FormInputInterfaceTo) {\n        return this.inputs.indexOf(interfaceTo);\n    }\n\n    getFormValues() {\n        const ret: FormValues = {};\n        this.inputs.forEach(({getName,getValue}) => {\n            const name = getName();\n            let value = getValue();            \n            ret[name] = value;\n        });\n        return ret;\n    }\n\n    clearInputErrors() {\n        this.inputs.forEach(({getErrorState}) => {\n            getErrorState().value = false;\n        });\n    }\n\n    registerInput(interfaceTo: FormInputInterfaceTo): FormInputInterfaceFrom {\n        this.inputs.push(interfaceTo);\n\n        const signalKeyDownEnter = () => {\n            const index = this.getInputIndex(interfaceTo);\n            const moveToNextIndex = (index: number) => {\n                if (index!==-1) {\n                    if ((this.submit) && (!this.submit.getDisabledState().value)) {\n                        const nextIndex = index+1;\n                        // this.inputs.forEach(({getName}) => console.log(getName()));\n                        // console.log(nextIndex,this.inputs.length);\n                        if (nextIndex<this.inputs.length) {\n                            if (this.inputs[nextIndex].getIsHidden()) {\n                                moveToNextIndex(nextIndex);\n                            }\n                            else {\n                                this.inputs[nextIndex].focus();\n                            }                            \n                        }\n                        else {\n                            this.formStateValue.submit();\n                        }\n                    }\n                    else {                 \n                        \n                        const nextIndex = (index+1)%this.inputs.length;\n                        // console.log(\"nextIndex\",nextIndex);       \n                        if (nextIndex!==index) {\n                            if (this.inputs[nextIndex].getIsHidden()) {\n                                moveToNextIndex(nextIndex);\n                            }\n                            else {\n                                this.inputs[nextIndex].focus();\n                            }                            \n                        }                    \n                    }\n                }    \n            };\n            moveToNextIndex(index);\n        };\n\n        const signalChange = () => {\n            this.formStateValue.clearError();\n            this.updateSubmitDisabledBasedOnDisabledIfOtpNotComplete();\n        };\n\n        const name = interfaceTo.getName();\n\n        const makeup = this.getMakeupByName(name);\n\n        if (!makeup) throw new Error(`could not find input '${name}' in form request makeup`);\n\n        const signalDiffersFromInitialValueChange = () => {\n            this.updateSubmitDisabledBasedOnDisabledIfChanged();\n        };\n\n        const toCallOnFirstEffect = this.valuesInitialized?() => {\n            this.setSingleInputInitialValues({},interfaceTo);\n        }:undefined;\n    \n        return { signalKeyDownEnter,signalChange,makeup,signalDiffersFromInitialValueChange,toCallOnFirstEffect };\n    }\n\n    unregisterInput(interfaceTo: FormInputInterfaceTo) {\n        const newRegisteredInputs = this.inputs.filter(x => x!==interfaceTo);\n        this.inputs.length = 0;\n        this.inputs.push(...newRegisteredInputs);\n    }\n\n    registerSubmit(interfaceTo: FormSubmitInterfaceTo,name?: string) {        \n        if (name) {\n            const alternativeSubmit = (this.formRequestMakeup.alternativeSubmits || {})[name];\n            if (!alternativeSubmit) throw new Error(`no alternative submit exists called '${name}'`);\n            this.namedSubmits[name] = interfaceTo;\n        }\n        else {\n            this.submit = interfaceTo;\n        }        \n    }\n\n    unregisterSubmit(interfaceTo: FormSubmitInterfaceTo,name?: string) {\n        if (name) {\n            if (this.namedSubmits[name]===interfaceTo) {\n                delete this.namedSubmits[name];\n            }    \n        }\n        else {\n            if (this.submit===interfaceTo) {\n                this.submit = null;\n            }    \n        }\n    }\n\n    getMakeupByName(name: string) {\n        const makeup = this.formRequestMakeup.inputs[name];\n        if (!makeup) throw new Error(`could not find input '${name}' in form request makeup`);\n        return makeup;\n    }\n\n    updateInputValues(updateValues: FormValues) {\n        const inputHash = this.getInputHashByName();\n        Object.keys(updateValues).forEach((name) => {\n            const input = inputHash[name];\n            if (input) input.setValue(updateValues[name]);\n        });\n    }\n\n    disableForm(value = true) {\n        this.inputs.forEach(({getDisabledState}) => {\n            getDisabledState().value = value;\n        });\n        if (this.submit) {\n            this.submit.getDisabledState().value = value;\n        }\n    }\n\n    getInputDiffersFromInitialValueTable() {\n        const ret: {[name: string]: boolean} = {};\n        this.inputs.forEach(({getName,getDiffersFromInitialValue}) => {\n            ret[getName()] = getDiffersFromInitialValue();\n        });\n        return ret;\n    }\n\n    updateSubmitDisabledBasedOnDisabledIfChanged() {\n        if (this.submit) {\n            const names = this.submit.getDisableIfUnchanged();\n            if (names.length>0) {\n                const table = this.getInputDiffersFromInitialValueTable();\n                this.submit.getDisabledState().value = (() => {                \n                    return (names.filter((name) => table[name]).length===0);\n                })();                    \n            }\n        }\n    }\n\n    updateSubmitDisabledBasedOnDisabledIfOtpNotComplete() {\n        if (this.submit) {\n            const inputHash = this.getInputHashByName();\n            const otpName = this.submit.getDisableIfOtpNotComplete();\n            if (inputHash[otpName]) {\n                this.submit.getDisabledState().value = !inputHash[otpName].getOtpIsComplete();\n            }\n        }\n    }\n\n    setSingleInputInitialValues(overrideInputInitialValues: {[name: string]: string},{getName,getInitialValue,setValue,signalInitialized,getType,getInitialSelectedIndex,setSelectedIndex}: FormInputInterfaceTo) {\n        const name = getName();  \n        const initialSelectedIndex = getInitialSelectedIndex();          \n        if ((getType()===\"select\") && (initialSelectedIndex>=0)) {\n            setSelectedIndex(initialSelectedIndex);\n        }\n        else {\n            const initialValue = (typeof overrideInputInitialValues[name]===\"string\")?overrideInputInitialValues[name]:getInitialValue();\n            const defaultInitialValue = this.formRequestMakeup.inputs[name]?.defaultInitialValue || \"\";\n            setValue(initialValue || defaultInitialValue);\n        }            \n        signalInitialized();\n    }\n\n    setInitialValues(overrideInputInitialValues: {[name: string]: string}) {\n        this.inputs.forEach((input) => {\n            this.setSingleInputInitialValues(overrideInputInitialValues,input);\n        });\n        this.valuesInitialized = true;\n    }\n\n    focusInput(name: string) {\n        const input = this.getInputByName(name);\n        if (input) {\n            const { focus } = input;\n            focus();\n        }\n    }\n\n    setInputValue(name: string,value: string) {\n        const input = this.getInputByName(name);\n        if (input) {\n            const { focus,setValue } = input;\n            setValue(value);\n        }\n    }\n}\n\nexport type FormInputInterfaceTo = {\n    focus: () => void;\n    getName: () => string;\n    getValue: () => string;\n    setValue: (value: string) => void;\n    setSelectedIndex: (value: number) => void;\n    signalInitialized: () => void;\n    getErrorState: () => SmartState<boolean>;\n    getInitialValue: () => string;\n    getInitialSelectedIndex: () => number;\n    getIsHidden: () => boolean;\n    getType: () => string;\n    getDisabledState: () => SmartState<boolean>;\n    getDiffersFromInitialValue: () => boolean;\n    getOtpIsComplete: () => boolean;\n};\nexport type FormInputInterfaceFrom = {\n    signalKeyDownEnter: () => void;\n    signalChange: () => void;\n    signalDiffersFromInitialValueChange: () => void;\n    makeup: FormRequestMakeupInput;\n    toCallOnFirstEffect?: () => void;\n};\n\nexport type FormSubmitInterfaceTo = {\n    getDisabledState: () => SmartState<boolean>;\n    getDisableIfUnchanged: () => string[];\n    getDisableIfOtpNotComplete: () => string;\n};\n\nexport type FormRefInterface = {\n    submit: (name?: string) => void;\n};\n\nfunction _Form({\n        children = null,\n        parent,\n        input,\n        autoFocus,\n        requestMakeup = { inputs: {},relativeUrl: \"\" },\n        onSuccess = () => {},\n        align = \"left\",\n        initializeCb = () => {},\n        initialError = \"\",\n        invisible = false,\n        alternateStatusMessage\n    }:FormProps,ref: MutableRefObject<FormRefInterface>) {\n    const cssStateManager = useCssStateManager([\"form\"]);\n    cssStateManager.useProperty(invisible,\"is-invisible\");\n\n    const formStateValueRef = useRef<FormState>();\n\n    const statusMessage = alternateStatusMessage || useStatusMessage(invisible);\n\n    const isSecurePage = useIsSecurePage();\n\n    const account = consumeAccount();\n    const router = useCustomRouter();\n\n    if (parent) {\n        useAccountBarParentNav(parent.caption,parent.path);\n    }\n\n    formStateValueRef.current = formStateValueRef.current || { \n        align,\n        getFormValues: () => {\n            const { current: internalData } = internalDataRef;\n            return internalData.getFormValues();\n        },\n        renderParentNav: (cb) => {\n            if (parent) {\n                return cb(parent);\n            }\n            else {\n                return null;\n            }\n        },\n        input: input || {},\n        useInput: (define) => {\n            const interfaceFromRef = useRef<FormInputInterfaceFrom>(null);\n            const interfaceToRef = useRef<FormInputInterfaceTo>(null);\n            const isFirstRender = useRef(true);\n            \n            if (isFirstRender.current) {\n                const { current: internalData } = internalDataRef;\n                interfaceToRef.current = define();\n                interfaceFromRef.current = internalData.registerInput(interfaceToRef.current);\n            }\n\n            isFirstRender.current = false;\n\n            useEffect(() => {                \n                // const { getInitialValue,setValue } = interfaceToRef.current;\n                // setValue(getInitialValue());\n                return () => {\n                    const { current: internalData } = internalDataRef;\n                    internalData.unregisterInput(interfaceToRef.current);\n                };\n            },[]);\n\n            return interfaceFromRef.current;\n        },\n        focusInput(name: string) {\n            const { current: internalData } = internalDataRef;\n            internalData.focusInput(name);\n        },\n        setInputValue(name: string,value: string) {\n            const { current: internalData } = internalDataRef;\n            internalData.setInputValue(name,value);\n        },\n        useSubmit: (define,name) => {\n            const interfaceToRef = useRef<FormSubmitInterfaceTo>(null);\n            const isFirstRender = useRef(true);\n            \n            if (isFirstRender.current) {\n                const { current: internalData } = internalDataRef;\n                interfaceToRef.current = define();\n                internalData.registerSubmit(interfaceToRef.current,name);\n            }\n\n            isFirstRender.current = false;\n\n            useEffect(() => {\n                return () => {\n                    const { current: internalData } = internalDataRef;\n                    internalData.unregisterSubmit(interfaceToRef.current,name);\n                };\n            },[]);\n        },\n        async submit(name?: string) {\n            alert(\"Demo: this feature has been disabled\");\n            return;\n            let { relativeUrl } = requestMakeup;\n            let emptyForm = false;\n            if (name) {\n                const alternativeSubmit = (requestMakeup.alternativeSubmits || {})[name];\n                if (alternativeSubmit) {\n                    relativeUrl = alternativeSubmit.relativeUrl;\n                    emptyForm = !!alternativeSubmit.emptyForm;\n                }\n            }\n\n            formStateValueRef.current.clearError();\n            const { current: internalData } = internalDataRef;\n            let values = internalData.getFormValues();     \n            const { values: _values,error,updateValues } = preprocessFromMakeup(values,requestMakeup,\"client\",emptyForm);\n            values = _values;\n            internalData.updateInputValues(updateValues);\n\n            const processError = (error: FormError) => {\n                const { message,inputNames } = error;\n                const errorTable = requestMakeup.errorTable || {};\n                statusMessage.showError(errorTable[message] || message);\n                const inputHash = internalData.getInputHashByName();\n                let firstInput: FormInputInterfaceTo;\n                inputNames.forEach((name) => {\n                    const input = inputHash[name as string];\n                    if (input) {\n                        input.getErrorState().value = true;\n                        if (!firstInput) firstInput = input;\n                    }\n                });\n                firstInput = firstInput || internalData.getFirstNonHiddenInput();\n                if (firstInput) {\n                    firstInput.focus();\n                }\n            };\n\n            if (error) {\n                processError(error);\n            }\n            else {\n                let success = false;\n                let result: any;\n                await router.runLocked(async () => {\n                    internalData.disableForm();\n                    try {                            \n                        const { result: _result,newAccountValue } = await postRequest(isSecurePage?account.value as Account:null,relativeUrl,values);\n                        if ((isSecurePage) && (newAccountValue)) {\n                            account.value = newAccountValue;\n                        }\n                        success = true;\n                        result = _result;\n                    }\n                    catch(err) {\n                        if ((isSecurePage) && (err instanceof RequestErrorPermissionDenied)) {\n                            account.value = null;\n                            router.push(\"/login\");\n                            return;\n                        }\n                        else if (err instanceof RequestErrorNoNetworkConnection) {                            \n                            statusMessage.showError(\"Network error: make sure you are connected to the internet.\");\n                            internalData.disableForm(false);\n                        }\n                        else if (err instanceof RequestErrorCustom) {\n                            internalData.disableForm(false);\n                            const { message,inputNames } = err;\n                            processError({\n                                message,\n                                inputNames\n                            });\n                        }\n                        else {\n                            statusMessage.showError(\"An unexpected error occurred, please try again. If this persists, contact us\");\n                            internalData.disableForm(false);\n                        }                            \n                    }    \n                });\n                // if (success) {\n                //     const res = onSuccess(result,name);\n                //     if (res) {\n                //         if (res.type===\"redirect\") {\n                //             if (res.message) statusMessage.loadMessage(res.message);\n                //             if (misc.isExternalPath(res.path)) {\n                //                 location.href = res.path;\n                //             }\n                //             else {\n                //                 router.push(res.path);\n                //             }                            \n                //         }\n                //         else if (res.type===\"message\") {\n                //             internalData.disableForm(false);\n                //             statusMessage.showFromObject(res.message);\n                //         }\n                //     }\n                //     else {\n                //         internalData.disableForm(false);\n                //     }\n                // }\n            }\n        },\n        clearError() {\n            statusMessage.close();\n            const { current: internalData } = internalDataRef;\n            internalData.clearInputErrors();\n        }\n    };\n\n    useImperativeHandle(ref,() => ({\n        submit(name?: string) {\n            formStateValueRef.current.submit(name);\n        }\n    }));\n\n    const internalDataRef = useRef<FormInternalData>(null);\n    internalDataRef.current = internalDataRef.current || new FormInternalData(formStateValueRef.current,requestMakeup);\n\n    useEffect(() => {\n        const res = initializeCb();\n        const { current: internalData } = internalDataRef;        \n        internalData.setInitialValues((res && res.inputInitialValues)?res.inputInitialValues:{});\n        if ((res) && (res.autoFocus)) {\n            autoFocus = res.autoFocus;\n        }\n        if (res && res.message) {\n            res.message = (typeof res.message===\"string\")?{value: res.message}:res.message;            \n            statusMessage.showInfo(res.message.value,!!res.message.permanent);\n        }\n        else if ((typeof initialError===\"string\") && (initialError!==\"\")) {\n            const errorTable = requestMakeup.errorTable || {};            \n            statusMessage.showError(errorTable[initialError] || initialError);\n        }\n\n        const firstInput = internalData.getFirstNonHiddenInput();\n        if ((autoFocus) && (firstInput)) {\n            const input = (typeof autoFocus===\"string\")?internalData.getInputByName(autoFocus):firstInput;\n            if (input) input.focus();\n        }\n        internalData.updateSubmitDisabledBasedOnDisabledIfChanged();\n        internalData.updateSubmitDisabledBasedOnDisabledIfOtpNotComplete();\n    },[]);\n\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>                \n                {invisible?null:statusMessage.component}\n                <FormStateContext.Provider value={formStateValueRef.current}>\n                    {children}\n                </FormStateContext.Provider>                \n            </div>\n            <style jsx>{`\n            .form {\n                --text-color: #555;\n                --border-color: #ccc;\n                --input-backcolor: #fff;\n                --input-textcolor: #666;\n                --input-placeholder-textcolor: #ccc;\n                --input-bordercolor: #666;\n                --input-focus-bordercolor: #908ee9;\n                --input-disabled-backcolor: #f9f9f9;\n                --error-color: #dc0303;\n                --button-backcolor: #076bd1;\n                --button-textcolor: #fff;\n                --button-alternate-backcolor: #555;\n                --button-alternate-textcolor: #fff;\n            }\n\n            .is-invisible {\n                position: absolute;\n                visibility: hidden;\n            }\n            `}</style>\n        </>\n    );\n}\n\nexport type FormState = {\n    renderParentNav: (cb: (parent: FormParent) => any) => any;\n    input: FormInput;\n    align: FormAlignment;\n    useInput: (define: () => FormInputInterfaceTo) => FormInputInterfaceFrom;\n    useSubmit: (define: () => FormSubmitInterfaceTo,name?: string) => void;\n    submit: (name?: string) => Promise<void>;\n    clearError: () => void;\n    getFormValues: () => FormValues;\n    focusInput: (name: string) => void;\n    setInputValue: (name: string,value: string) => void;\n};\n\nexport const FormStateContext = createContext<FormState>(null);\n\nexport const useForm = () => {\n    const ret = useContext(FormStateContext);\n    if (!ret) throw new Error(\"useForm cannot be used within a component that is not a child of a Form component\");\n    return ret;\n};\n\nconst Form = forwardRef(_Form);\n\nexport default Form;","export var CountryCode;\n(function (CountryCode) {\n    CountryCode[\"UK\"] = \"UK\";\n    CountryCode[\"GB\"] = \"GB\";\n    CountryCode[\"JE\"] = \"JE\";\n    CountryCode[\"GG\"] = \"GG\";\n    CountryCode[\"IM\"] = \"IM\";\n    CountryCode[\"US\"] = \"US\";\n    CountryCode[\"CA\"] = \"CA\";\n    CountryCode[\"IE\"] = \"IE\";\n    CountryCode[\"DE\"] = \"DE\";\n    CountryCode[\"JP\"] = \"JP\";\n    CountryCode[\"FR\"] = \"FR\";\n    CountryCode[\"AU\"] = \"AU\";\n    CountryCode[\"IT\"] = \"IT\";\n    CountryCode[\"CH\"] = \"CH\";\n    CountryCode[\"AT\"] = \"AT\";\n    CountryCode[\"ES\"] = \"ES\";\n    CountryCode[\"NL\"] = \"NL\";\n    CountryCode[\"BE\"] = \"BE\";\n    CountryCode[\"DK\"] = \"DK\";\n    CountryCode[\"SE\"] = \"SE\";\n    CountryCode[\"NO\"] = \"NO\";\n    CountryCode[\"BR\"] = \"BR\";\n    CountryCode[\"PT\"] = \"PT\";\n    CountryCode[\"FI\"] = \"FI\";\n    CountryCode[\"AX\"] = \"AX\";\n    CountryCode[\"KR\"] = \"KR\";\n    CountryCode[\"CN\"] = \"CN\";\n    CountryCode[\"TW\"] = \"TW\";\n    CountryCode[\"SG\"] = \"SG\";\n    CountryCode[\"DZ\"] = \"DZ\";\n    CountryCode[\"AD\"] = \"AD\";\n    CountryCode[\"AR\"] = \"AR\";\n    CountryCode[\"AM\"] = \"AM\";\n    CountryCode[\"AZ\"] = \"AZ\";\n    CountryCode[\"BH\"] = \"BH\";\n    CountryCode[\"BD\"] = \"BD\";\n    CountryCode[\"BB\"] = \"BB\";\n    CountryCode[\"BY\"] = \"BY\";\n    CountryCode[\"BM\"] = \"BM\";\n    CountryCode[\"BA\"] = \"BA\";\n    CountryCode[\"IO\"] = \"IO\";\n    CountryCode[\"BN\"] = \"BN\";\n    CountryCode[\"BG\"] = \"BG\";\n    CountryCode[\"KH\"] = \"KH\";\n    CountryCode[\"CV\"] = \"CV\";\n    CountryCode[\"CL\"] = \"CL\";\n    CountryCode[\"CR\"] = \"CR\";\n    CountryCode[\"HR\"] = \"HR\";\n    CountryCode[\"CY\"] = \"CY\";\n    CountryCode[\"CZ\"] = \"CZ\";\n    CountryCode[\"DO\"] = \"DO\";\n    CountryCode[\"EC\"] = \"EC\";\n    CountryCode[\"EG\"] = \"EG\";\n    CountryCode[\"EE\"] = \"EE\";\n    CountryCode[\"FO\"] = \"FO\";\n    CountryCode[\"GE\"] = \"GE\";\n    CountryCode[\"GR\"] = \"GR\";\n    CountryCode[\"GL\"] = \"GL\";\n    CountryCode[\"GT\"] = \"GT\";\n    CountryCode[\"HT\"] = \"HT\";\n    CountryCode[\"HN\"] = \"HN\";\n    CountryCode[\"HU\"] = \"HU\";\n    CountryCode[\"IS\"] = \"IS\";\n    CountryCode[\"IN\"] = \"IN\";\n    CountryCode[\"ID\"] = \"ID\";\n    CountryCode[\"IL\"] = \"IL\";\n    CountryCode[\"JO\"] = \"JO\";\n    CountryCode[\"KZ\"] = \"KZ\";\n    CountryCode[\"KE\"] = \"KE\";\n    CountryCode[\"KW\"] = \"KW\";\n    CountryCode[\"KY\"] = \"KY\";\n    CountryCode[\"LA\"] = \"LA\";\n    CountryCode[\"LV\"] = \"LV\";\n    CountryCode[\"LB\"] = \"LB\";\n    CountryCode[\"LI\"] = \"LI\";\n    CountryCode[\"LT\"] = \"LT\";\n    CountryCode[\"LU\"] = \"LU\";\n    CountryCode[\"MK\"] = \"MK\";\n    CountryCode[\"MY\"] = \"MY\";\n    CountryCode[\"MV\"] = \"MV\";\n    CountryCode[\"MT\"] = \"MT\";\n    CountryCode[\"MU\"] = \"MU\";\n    CountryCode[\"MX\"] = \"MX\";\n    CountryCode[\"MD\"] = \"MD\";\n    CountryCode[\"MC\"] = \"MC\";\n    CountryCode[\"MA\"] = \"MA\";\n    CountryCode[\"NP\"] = \"NP\";\n    CountryCode[\"NZ\"] = \"NZ\";\n    CountryCode[\"NI\"] = \"NI\";\n    CountryCode[\"NG\"] = \"NG\";\n    CountryCode[\"OM\"] = \"OM\";\n    CountryCode[\"PA\"] = \"PA\";\n    CountryCode[\"PK\"] = \"PK\";\n    CountryCode[\"PY\"] = \"PY\";\n    CountryCode[\"PH\"] = \"PH\";\n    CountryCode[\"PL\"] = \"PL\";\n    CountryCode[\"PR\"] = \"PR\";\n    CountryCode[\"RO\"] = \"RO\";\n    CountryCode[\"RU\"] = \"RU\";\n    CountryCode[\"SM\"] = \"SM\";\n    CountryCode[\"SA\"] = \"SA\";\n    CountryCode[\"SN\"] = \"SN\";\n    CountryCode[\"SK\"] = \"SK\";\n    CountryCode[\"SI\"] = \"SI\";\n    CountryCode[\"ZA\"] = \"ZA\";\n    CountryCode[\"LK\"] = \"LK\";\n    CountryCode[\"TJ\"] = \"TJ\";\n    CountryCode[\"TH\"] = \"TH\";\n    CountryCode[\"TN\"] = \"TN\";\n    CountryCode[\"TR\"] = \"TR\";\n    CountryCode[\"TM\"] = \"TM\";\n    CountryCode[\"UA\"] = \"UA\";\n    CountryCode[\"UY\"] = \"UY\";\n    CountryCode[\"UZ\"] = \"UZ\";\n    CountryCode[\"VA\"] = \"VA\";\n    CountryCode[\"VE\"] = \"VE\";\n    CountryCode[\"ZM\"] = \"ZM\";\n    CountryCode[\"AS\"] = \"AS\";\n    CountryCode[\"CC\"] = \"CC\";\n    CountryCode[\"CK\"] = \"CK\";\n    CountryCode[\"RS\"] = \"RS\";\n    CountryCode[\"ME\"] = \"ME\";\n    CountryCode[\"CS\"] = \"CS\";\n    CountryCode[\"YU\"] = \"YU\";\n    CountryCode[\"CX\"] = \"CX\";\n    CountryCode[\"ET\"] = \"ET\";\n    CountryCode[\"FK\"] = \"FK\";\n    CountryCode[\"NF\"] = \"NF\";\n    CountryCode[\"FM\"] = \"FM\";\n    CountryCode[\"GF\"] = \"GF\";\n    CountryCode[\"GN\"] = \"GN\";\n    CountryCode[\"GP\"] = \"GP\";\n    CountryCode[\"GS\"] = \"GS\";\n    CountryCode[\"GU\"] = \"GU\";\n    CountryCode[\"GW\"] = \"GW\";\n    CountryCode[\"HM\"] = \"HM\";\n    CountryCode[\"IQ\"] = \"IQ\";\n    CountryCode[\"KG\"] = \"KG\";\n    CountryCode[\"LR\"] = \"LR\";\n    CountryCode[\"LS\"] = \"LS\";\n    CountryCode[\"MG\"] = \"MG\";\n    CountryCode[\"MH\"] = \"MH\";\n    CountryCode[\"MN\"] = \"MN\";\n    CountryCode[\"MP\"] = \"MP\";\n    CountryCode[\"MQ\"] = \"MQ\";\n    CountryCode[\"NC\"] = \"NC\";\n    CountryCode[\"NE\"] = \"NE\";\n    CountryCode[\"VI\"] = \"VI\";\n    CountryCode[\"VN\"] = \"VN\";\n    CountryCode[\"PF\"] = \"PF\";\n    CountryCode[\"PG\"] = \"PG\";\n    CountryCode[\"PM\"] = \"PM\";\n    CountryCode[\"PN\"] = \"PN\";\n    CountryCode[\"PW\"] = \"PW\";\n    CountryCode[\"RE\"] = \"RE\";\n    CountryCode[\"SH\"] = \"SH\";\n    CountryCode[\"SJ\"] = \"SJ\";\n    CountryCode[\"SO\"] = \"SO\";\n    CountryCode[\"SZ\"] = \"SZ\";\n    CountryCode[\"TC\"] = \"TC\";\n    CountryCode[\"WF\"] = \"WF\";\n    CountryCode[\"XK\"] = \"XK\";\n    CountryCode[\"YT\"] = \"YT\";\n    CountryCode[\"INTL\"] = \"INTL\";\n})(CountryCode || (CountryCode = {}));\n","import { CountryCode } from './postcode-types';\n// TODO: Remove CountryCode.UK in next major version release\nexport const POSTCODE_REGEXES = new Map([\n    [\n        CountryCode.UK,\n        /^([A-Z]){1}([0-9][0-9]|[0-9]|[A-Z][0-9][A-Z]|[A-Z][0-9][0-9]|[A-Z][0-9]|[0-9][A-Z]){1}([ ])?([0-9][A-z][A-z]){1}$/i,\n    ],\n    [\n        CountryCode.GB,\n        /^([A-Z]){1}([0-9][0-9]|[0-9]|[A-Z][0-9][A-Z]|[A-Z][0-9][0-9]|[A-Z][0-9]|[0-9][A-Z]){1}([ ])?([0-9][A-z][A-z]){1}$/i,\n    ],\n    [CountryCode.JE, /^JE\\d[\\dA-Z]?[ ]?\\d[ABD-HJLN-UW-Z]{2}$/],\n    [CountryCode.GG, /^GY\\d[\\dA-Z]?[ ]?\\d[ABD-HJLN-UW-Z]{2}$/],\n    [CountryCode.IM, /^IM\\d[\\dA-Z]?[ ]?\\d[ABD-HJLN-UW-Z]{2}$/],\n    [CountryCode.US, /^([0-9]{5})(?:-([0-9]{4}))?$/],\n    [CountryCode.CA, /^([ABCEGHJKLMNPRSTVXY][0-9][ABCEGHJKLMNPRSTVWXYZ])\\s*([0-9][ABCEGHJKLMNPRSTVWXYZ][0-9])$/i],\n    [CountryCode.IE, /^([AC-FHKNPRTV-Y][0-9]{2}|D6W)[ -]?[0-9AC-FHKNPRTV-Y]{4}$/],\n    [CountryCode.DE, /^\\d{5}$/],\n    [CountryCode.JP, /^\\d{3}-\\d{4}$/],\n    [CountryCode.FR, /^\\d{2}[ ]?\\d{3}$/],\n    [CountryCode.AU, /^\\d{4}$/],\n    [CountryCode.IT, /^\\d{5}$/],\n    [CountryCode.CH, /^\\d{4}$/],\n    [CountryCode.AT, /^(?!0)\\d{4}$/],\n    [CountryCode.ES, /^(?:0[1-9]|[1-4]\\d|5[0-2])\\d{3}$/],\n    [CountryCode.NL, /^\\d{4}[ ]?[A-Z]{2}$/],\n    [CountryCode.BE, /^\\d{4}$/],\n    [CountryCode.DK, /^\\d{4}$/],\n    [CountryCode.SE, /^(SE-)?\\d{3}[ ]?\\d{2}$/],\n    [CountryCode.NO, /^\\d{4}$/],\n    [CountryCode.BR, /^\\d{5}[\\-]?\\d{3}$/],\n    [CountryCode.PT, /^\\d{4}([\\-]\\d{3})?$/],\n    [CountryCode.FI, /^(FI-|AX-)?\\d{5}$/],\n    [CountryCode.AX, /^22\\d{3}$/],\n    [CountryCode.KR, /^\\d{5}$/],\n    [CountryCode.CN, /^\\d{6}$/],\n    [CountryCode.TW, /^\\d{3}(\\d{2})?$/],\n    [CountryCode.SG, /^\\d{6}$/],\n    [CountryCode.DZ, /^\\d{5}$/],\n    [CountryCode.AD, /^AD\\d{3}$/],\n    [CountryCode.AR, /^([A-HJ-NP-Z])?\\d{4}([A-Z]{3})?$/],\n    [CountryCode.AM, /^(37)?\\d{4}$/],\n    [CountryCode.AZ, /^\\d{4}$/],\n    [CountryCode.BH, /^((1[0-2]|[2-9])\\d{2})?$/],\n    [CountryCode.BD, /^\\d{4}$/],\n    [CountryCode.BB, /^(BB\\d{5})?$/],\n    [CountryCode.BY, /^\\d{6}$/],\n    [CountryCode.BM, /^[A-Z]{2}[ ]?[A-Z0-9]{2}$/],\n    [CountryCode.BA, /^\\d{5}$/],\n    [CountryCode.IO, /^BBND 1ZZ$/],\n    [CountryCode.BN, /^[A-Z]{2}[ ]?\\d{4}$/],\n    [CountryCode.BG, /^\\d{4}$/],\n    [CountryCode.KH, /^\\d{5}$/],\n    [CountryCode.CV, /^\\d{4}$/],\n    [CountryCode.CL, /^\\d{7}$/],\n    [CountryCode.CR, /^(\\d{4,5}|\\d{3}-\\d{4})$/],\n    [CountryCode.HR, /^(HR-)?\\d{5}$/],\n    [CountryCode.CY, /^\\d{4}$/],\n    [CountryCode.CZ, /^\\d{3}[ ]?\\d{2}$/],\n    [CountryCode.DO, /^\\d{5}$/],\n    [CountryCode.EC, /^([A-Z]\\d{4}[A-Z]|(?:[A-Z]{2})?\\d{6})?$/],\n    [CountryCode.EG, /^\\d{5}$/],\n    [CountryCode.EE, /^\\d{5}$/],\n    [CountryCode.FO, /^\\d{3}$/],\n    [CountryCode.GE, /^\\d{4}$/],\n    [CountryCode.GR, /^\\d{3}[ ]?\\d{2}$/],\n    [CountryCode.GL, /^39\\d{2}$/],\n    [CountryCode.GT, /^\\d{5}$/],\n    [CountryCode.HT, /^\\d{4}$/],\n    [CountryCode.HN, /^(?:\\d{5})?$/],\n    [CountryCode.HU, /^\\d{4}$/],\n    [CountryCode.IS, /^\\d{3}$/],\n    [CountryCode.IN, /^\\d{6}$/],\n    [CountryCode.ID, /^\\d{5}$/],\n    [CountryCode.IL, /^\\d{5,7}$/],\n    [CountryCode.JO, /^\\d{5}$/],\n    [CountryCode.KZ, /^\\d{6}$/],\n    [CountryCode.KE, /^\\d{5}$/],\n    [CountryCode.KW, /^\\d{5}$/],\n    [CountryCode.KY, /^KY[123]-\\d{4}$/],\n    [CountryCode.LA, /^\\d{5}$/],\n    [CountryCode.LV, /^(LV-)?\\d{4}$/],\n    [CountryCode.LB, /^(\\d{4}([ ]?\\d{4})?)?$/],\n    [CountryCode.LI, /^(948[5-9])|(949[0-7])$/],\n    [CountryCode.LT, /^(LT-)?\\d{5}$/],\n    [CountryCode.LU, /^(L-)?\\d{4}$/],\n    [CountryCode.MK, /^\\d{4}$/],\n    [CountryCode.MY, /^\\d{5}$/],\n    [CountryCode.MV, /^\\d{5}$/],\n    [CountryCode.MT, /^[A-Z]{3}[ ]?\\d{2,4}$/],\n    [CountryCode.MU, /^((\\d|[A-Z])\\d{4})?$/],\n    [CountryCode.MX, /^\\d{5}$/],\n    [CountryCode.MD, /^\\d{4}$/],\n    [CountryCode.MC, /^980\\d{2}$/],\n    [CountryCode.MA, /^\\d{5}$/],\n    [CountryCode.NP, /^\\d{5}$/],\n    [CountryCode.NZ, /^\\d{4}$/],\n    [CountryCode.NI, /^((\\d{4}-)?\\d{3}-\\d{3}(-\\d{1})?)?$/],\n    [CountryCode.NG, /^(\\d{6})?$/],\n    [CountryCode.OM, /^(PC )?\\d{3}$/],\n    [CountryCode.PA, /^\\d{4}$/],\n    [CountryCode.PK, /^\\d{5}$/],\n    [CountryCode.PY, /^\\d{4}$/],\n    [CountryCode.PH, /^\\d{4}$/],\n    [CountryCode.PL, /^\\d{2}-\\d{3}$/],\n    [CountryCode.PR, /^00[679]\\d{2}([ \\-]\\d{4})?$/],\n    [CountryCode.RO, /^\\d{6}$/],\n    [CountryCode.RU, /^\\d{6}$/],\n    [CountryCode.SM, /^4789\\d$/],\n    [CountryCode.SA, /^\\d{5}$/],\n    [CountryCode.SN, /^\\d{5}$/],\n    [CountryCode.SK, /^\\d{3}[ ]?\\d{2}$/],\n    [CountryCode.SI, /^(SI-)?\\d{4}$/],\n    [CountryCode.ZA, /^\\d{4}$/],\n    [CountryCode.LK, /^\\d{5}$/],\n    [CountryCode.TJ, /^\\d{6}$/],\n    [CountryCode.TH, /^\\d{5}$/],\n    [CountryCode.TN, /^\\d{4}$/],\n    [CountryCode.TR, /^\\d{5}$/],\n    [CountryCode.TM, /^\\d{6}$/],\n    [CountryCode.UA, /^\\d{5}$/],\n    [CountryCode.UY, /^\\d{5}$/],\n    [CountryCode.UZ, /^\\d{6}$/],\n    [CountryCode.VA, /^00120$/],\n    [CountryCode.VE, /^\\d{4}$/],\n    [CountryCode.ZM, /^\\d{5}$/],\n    [CountryCode.AS, /^96799$/],\n    [CountryCode.CC, /^6799$/],\n    [CountryCode.CK, /^\\d{4}$/],\n    [CountryCode.RS, /^\\d{5,6}$/],\n    [CountryCode.ME, /^8\\d{4}$/],\n    [CountryCode.CS, /^\\d{5}$/],\n    [CountryCode.YU, /^\\d{5}$/],\n    [CountryCode.CX, /^6798$/],\n    [CountryCode.ET, /^\\d{4}$/],\n    [CountryCode.FK, /^FIQQ 1ZZ$/],\n    [CountryCode.NF, /^2899$/],\n    [CountryCode.FM, /^(9694[1-4])([ \\-]\\d{4})?$/],\n    [CountryCode.GF, /^9[78]3\\d{2}$/],\n    [CountryCode.GN, /^\\d{3}$/],\n    [CountryCode.GP, /^9[78][01]\\d{2}$/],\n    [CountryCode.GS, /^SIQQ 1ZZ$/],\n    [CountryCode.GU, /^969[123]\\d([ \\-]\\d{4})?$/],\n    [CountryCode.GW, /^\\d{4}$/],\n    [CountryCode.HM, /^\\d{4}$/],\n    [CountryCode.IQ, /^\\d{5}$/],\n    [CountryCode.KG, /^\\d{6}$/],\n    [CountryCode.LR, /^\\d{4}$/],\n    [CountryCode.LS, /^\\d{3}$/],\n    [CountryCode.MG, /^\\d{3}$/],\n    [CountryCode.MH, /^969[67]\\d([ \\-]\\d{4})?$/],\n    [CountryCode.MN, /^\\d{6}$/],\n    [CountryCode.MP, /^9695[012]([ \\-]\\d{4})?$/],\n    [CountryCode.MQ, /^9[78]2\\d{2}$/],\n    [CountryCode.NC, /^988\\d{2}$/],\n    [CountryCode.NE, /^\\d{4}$/],\n    [CountryCode.VI, /^008(([0-4]\\d)|(5[01]))([ \\-]\\d{4})?$/],\n    [CountryCode.VN, /^\\d{6}$/],\n    [CountryCode.PF, /^987\\d{2}$/],\n    [CountryCode.PG, /^\\d{3}$/],\n    [CountryCode.PM, /^9[78]5\\d{2}$/],\n    [CountryCode.PN, /^PCRN 1ZZ$/],\n    [CountryCode.PW, /^96940$/],\n    [CountryCode.RE, /^9[78]4\\d{2}$/],\n    [CountryCode.SH, /^(ASCN|STHL) 1ZZ$/],\n    [CountryCode.SJ, /^\\d{4}$/],\n    [CountryCode.SO, /^\\d{5}$/],\n    [CountryCode.SZ, /^[HLMS]\\d{3}$/],\n    [CountryCode.TC, /^TKCA 1ZZ$/],\n    [CountryCode.WF, /^986\\d{2}$/],\n    [CountryCode.XK, /^\\d{5}$/],\n    [CountryCode.YT, /^976\\d{2}$/],\n    [CountryCode.INTL, /^(?:[A-Z0-9]+([- ]?[A-Z0-9]+)*)?$/i],\n]);\n","import { SelectOption } from \"../types/form.types\";\nimport rawCountryMakeup from \"../shopify-country-makeup-with-code.min.json\";\nimport { postcodeValidator,postcodeValidatorExistsForCountry } from \"postcode-validator\";\nimport { findBestMatch } from \"string-similarity\";\n\nexport const country3isoTo2isoTable = {\n    \"AFG\": \"AF\",\n    \"ALB\": \"AL\",\n    \"DZA\": \"DZ\",\n    \"ASM\": \"AS\",\n    \"AND\": \"AD\",\n    \"AGO\": \"AO\",\n    \"AIA\": \"AI\",\n    \"ATA\": \"AQ\",\n    \"ATG\": \"AG\",\n    \"ARG\": \"AR\",\n    \"ARM\": \"AM\",\n    \"ABW\": \"AW\",\n    \"AUS\": \"AU\",\n    \"AUT\": \"AT\",\n    \"AZE\": \"AZ\",\n    \"BHS\": \"BS\",\n    \"BHR\": \"BH\",\n    \"BGD\": \"BD\",\n    \"BRB\": \"BB\",\n    \"BLR\": \"BY\",\n    \"BEL\": \"BE\",\n    \"BLZ\": \"BZ\",\n    \"BEN\": \"BJ\",\n    \"BMU\": \"BM\",\n    \"BTN\": \"BT\",\n    \"BOL\": \"BO\",\n    \"BES\": \"BQ\",\n    \"BIH\": \"BA\",\n    \"BWA\": \"BW\",\n    \"BVT\": \"BV\",\n    \"BRA\": \"BR\",\n    \"IOT\": \"IO\",\n    \"BRN\": \"BN\",\n    \"BGR\": \"BG\",\n    \"BFA\": \"BF\",\n    \"BDI\": \"BI\",\n    \"CPV\": \"CV\",\n    \"KHM\": \"KH\",\n    \"CMR\": \"CM\",\n    \"CAN\": \"CA\",\n    \"CYM\": \"KY\",\n    \"CAF\": \"CF\",\n    \"TCD\": \"TD\",\n    \"CHL\": \"CL\",\n    \"CHN\": \"CN\",\n    \"CXR\": \"CX\",\n    \"CCK\": \"CC\",\n    \"COL\": \"CO\",\n    \"COM\": \"KM\",\n    \"COD\": \"CD\",\n    \"COG\": \"CG\",\n    \"COK\": \"CK\",\n    \"CRI\": \"CR\",\n    \"HRV\": \"HR\",\n    \"CUB\": \"CU\",\n    \"CUW\": \"CW\",\n    \"CYP\": \"CY\",\n    \"CZE\": \"CZ\",\n    \"CIV\": \"CI\",\n    \"DNK\": \"DK\",\n    \"DJI\": \"DJ\",\n    \"DMA\": \"DM\",\n    \"DOM\": \"DO\",\n    \"ECU\": \"EC\",\n    \"EGY\": \"EG\",\n    \"SLV\": \"SV\",\n    \"GNQ\": \"GQ\",\n    \"ERI\": \"ER\",\n    \"EST\": \"EE\",\n    \"SWZ\": \"SZ\",\n    \"ETH\": \"ET\",\n    \"FLK\": \"FK\",\n    \"FRO\": \"FO\",\n    \"FJI\": \"FJ\",\n    \"FIN\": \"FI\",\n    \"FRA\": \"FR\",\n    \"GUF\": \"GF\",\n    \"PYF\": \"PF\",\n    \"ATF\": \"TF\",\n    \"GAB\": \"GA\",\n    \"GMB\": \"GM\",\n    \"GEO\": \"GE\",\n    \"DEU\": \"DE\",\n    \"GHA\": \"GH\",\n    \"GIB\": \"GI\",\n    \"GRC\": \"GR\",\n    \"GRL\": \"GL\",\n    \"GRD\": \"GD\",\n    \"GLP\": \"GP\",\n    \"GUM\": \"GU\",\n    \"GTM\": \"GT\",\n    \"GGY\": \"GG\",\n    \"GIN\": \"GN\",\n    \"GNB\": \"GW\",\n    \"GUY\": \"GY\",\n    \"HTI\": \"HT\",\n    \"HMD\": \"HM\",\n    \"VAT\": \"VA\",\n    \"HND\": \"HN\",\n    \"HKG\": \"HK\",\n    \"HUN\": \"HU\",\n    \"ISL\": \"IS\",\n    \"IND\": \"IN\",\n    \"IDN\": \"ID\",\n    \"IRN\": \"IR\",\n    \"IRQ\": \"IQ\",\n    \"IRL\": \"IE\",\n    \"IMN\": \"IM\",\n    \"ISR\": \"IL\",\n    \"ITA\": \"IT\",\n    \"JAM\": \"JM\",\n    \"JPN\": \"JP\",\n    \"JEY\": \"JE\",\n    \"JOR\": \"JO\",\n    \"KAZ\": \"KZ\",\n    \"KEN\": \"KE\",\n    \"KIR\": \"KI\",\n    \"PRK\": \"KP\",\n    \"KOR\": \"KR\",\n    \"KWT\": \"KW\",\n    \"KGZ\": \"KG\",\n    \"LAO\": \"LA\",\n    \"LVA\": \"LV\",\n    \"LBN\": \"LB\",\n    \"LSO\": \"LS\",\n    \"LBR\": \"LR\",\n    \"LBY\": \"LY\",\n    \"LIE\": \"LI\",\n    \"LTU\": \"LT\",\n    \"LUX\": \"LU\",\n    \"MAC\": \"MO\",\n    \"MDG\": \"MG\",\n    \"MWI\": \"MW\",\n    \"MYS\": \"MY\",\n    \"MDV\": \"MV\",\n    \"MLI\": \"ML\",\n    \"MLT\": \"MT\",\n    \"MHL\": \"MH\",\n    \"MTQ\": \"MQ\",\n    \"MRT\": \"MR\",\n    \"MUS\": \"MU\",\n    \"MYT\": \"YT\",\n    \"MEX\": \"MX\",\n    \"FSM\": \"FM\",\n    \"MDA\": \"MD\",\n    \"MCO\": \"MC\",\n    \"MNG\": \"MN\",\n    \"MNE\": \"ME\",\n    \"MSR\": \"MS\",\n    \"MAR\": \"MA\",\n    \"MOZ\": \"MZ\",\n    \"MMR\": \"MM\",\n    \"NAM\": \"NA\",\n    \"NRU\": \"NR\",\n    \"NPL\": \"NP\",\n    \"NLD\": \"NL\",\n    \"NCL\": \"NC\",\n    \"NZL\": \"NZ\",\n    \"NIC\": \"NI\",\n    \"NER\": \"NE\",\n    \"NGA\": \"NG\",\n    \"NIU\": \"NU\",\n    \"NFK\": \"NF\",\n    \"MNP\": \"MP\",\n    \"NOR\": \"NO\",\n    \"OMN\": \"OM\",\n    \"PAK\": \"PK\",\n    \"PLW\": \"PW\",\n    \"PSE\": \"PS\",\n    \"PAN\": \"PA\",\n    \"PNG\": \"PG\",\n    \"PRY\": \"PY\",\n    \"PER\": \"PE\",\n    \"PHL\": \"PH\",\n    \"PCN\": \"PN\",\n    \"POL\": \"PL\",\n    \"PRT\": \"PT\",\n    \"PRI\": \"PR\",\n    \"QAT\": \"QA\",\n    \"MKD\": \"MK\",\n    \"ROU\": \"RO\",\n    \"RUS\": \"RU\",\n    \"RWA\": \"RW\",\n    \"REU\": \"RE\",\n    \"BLM\": \"BL\",\n    \"SHN\": \"SH\",\n    \"KNA\": \"KN\",\n    \"LCA\": \"LC\",\n    \"MAF\": \"MF\",\n    \"SPM\": \"PM\",\n    \"VCT\": \"VC\",\n    \"WSM\": \"WS\",\n    \"SMR\": \"SM\",\n    \"STP\": \"ST\",\n    \"SAU\": \"SA\",\n    \"SEN\": \"SN\",\n    \"SRB\": \"RS\",\n    \"SYC\": \"SC\",\n    \"SLE\": \"SL\",\n    \"SGP\": \"SG\",\n    \"SXM\": \"SX\",\n    \"SVK\": \"SK\",\n    \"SVN\": \"SI\",\n    \"SLB\": \"SB\",\n    \"SOM\": \"SO\",\n    \"ZAF\": \"ZA\",\n    \"SGS\": \"GS\",\n    \"SSD\": \"SS\",\n    \"ESP\": \"ES\",\n    \"LKA\": \"LK\",\n    \"SDN\": \"SD\",\n    \"SUR\": \"SR\",\n    \"SJM\": \"SJ\",\n    \"SWE\": \"SE\",\n    \"CHE\": \"CH\",\n    \"SYR\": \"SY\",\n    \"TWN\": \"TW\",\n    \"TJK\": \"TJ\",\n    \"TZA\": \"TZ\",\n    \"THA\": \"TH\",\n    \"TLS\": \"TL\",\n    \"TGO\": \"TG\",\n    \"TKL\": \"TK\",\n    \"TON\": \"TO\",\n    \"TTO\": \"TT\",\n    \"TUN\": \"TN\",\n    \"TUR\": \"TR\",\n    \"TKM\": \"TM\",\n    \"TCA\": \"TC\",\n    \"TUV\": \"TV\",\n    \"UGA\": \"UG\",\n    \"UKR\": \"UA\",\n    \"ARE\": \"AE\",\n    \"GBR\": \"GB\",\n    \"UMI\": \"UM\",\n    \"USA\": \"US\",\n    \"URY\": \"UY\",\n    \"UZB\": \"UZ\",\n    \"VUT\": \"VU\",\n    \"VEN\": \"VE\",\n    \"VNM\": \"VN\",\n    \"VGB\": \"VG\",\n    \"VIR\": \"VI\",\n    \"WLF\": \"WF\",\n    \"ESH\": \"EH\",\n    \"YEM\": \"YE\",\n    \"ZMB\": \"ZM\",\n    \"ZWE\": \"ZW\",\n    \"ALA\": \"AX\"\n  };\n\ntype RawCountryEntry = typeof rawCountryMakeup.countries[0];\n\nexport type CountryMakeupField = {\n    id: string;\n    caption: string;\n    optional?: boolean;\n};\n\nexport type CountryMakeupGroup = CountryMakeupField[];\n\nexport type CountryMakeup = CountryMakeupGroup[];\n\nexport type ProvinceOption = {\n    id: string;\n    caption: string;\n};\n\nexport type Country = {\n    value: string;\n    caption: string;\n    code: string;\n    ccode: string;\n    makeup: CountryMakeup;\n    provinceOptions?: ProvinceOption[];\n};\n\nclass CountryMakeupLib {\n    private countryHash: {[value: string]: Country} = {};\n    private cachedSelectOptions: SelectOption[];\n\n    constructor() {\n        const { mtable,countries } = rawCountryMakeup;\n        countries.forEach(({caption,code,makeup,value,ccode,po}) => {\n            this.countryHash[value] = {\n                caption,\n                code,\n                ccode,\n                makeup: mtable[makeup],\n                value,\n                ...(po?{provinceOptions: po}:{})\n            };\n        });\n    }\n\n    getCountry(value: string) {\n        return this.countryHash[value];\n    }\n\n    getCountryCode(value: string) {\n        return this.getCountry(value)?.ccode || \"\";\n    }\n\n    matchProvince(countryValue: string,provinceCaption: string) {\n        const country = this.getCountry(countryValue);\n        if ((country) && (country.provinceOptions)) {\n            const { bestMatchIndex } = findBestMatch(provinceCaption,country.provinceOptions.map(({caption}) => caption));\n            return country.provinceOptions[bestMatchIndex].id;\n        }\n        else {\n            return \"---\";\n        }\n    }\n\n    getProvinceOptionsHash(country: Country) {\n        const ret: {[id: string]: string} = {};\n        (country.provinceOptions || []).forEach(({id,caption}) => {\n            ret[id] = caption;\n        });\n        return ret;\n    }\n\n    getCountryMakeupHash(value: string) {\n        const country = this.getCountry(value);\n        if (country) {\n            const ret: {[id: string]: {\n                caption: string;\n                optional: boolean;\n            }} = {};\n            country.makeup.forEach((group) => {\n                group.forEach(({id,caption,optional}) => {\n                    ret[id] = {\n                        caption,\n                        optional: !!optional\n                    };\n                });\n            });\n            return ret;\n        }\n        else {\n            return null;\n        }\n    }\n\n    getSelectOptions() {\n        const process = () => {\n            const { countries } = rawCountryMakeup;\n            const ret: SelectOption[] = [];\n    \n            const countryToSelectOption = ({value,caption}: RawCountryEntry) => {\n                const ret: SelectOption = {\n                    value,caption\n                };\n                return ret;\n            };\n    \n            const topOptions = [\n                \"United States\",\n                \"Canada\",\n                \"Japan\",\n                \"Australia\"\n            ];\n            const countryHash: {[value: string]: RawCountryEntry} = {};\n            countries.forEach((country) => {\n                const { value } = country;\n                countryHash[value] = country;\n            });\n            ret.push(...topOptions.map(x => countryHash[x]).map(countryToSelectOption));        \n            ret.push({value: \"---\",caption: \"---\",disabled: true});\n            ret.push(...countries.map(countryToSelectOption));\n            return ret;\n        };\n        return (this.cachedSelectOptions = this.cachedSelectOptions || process())\n    }\n\n    validatePostCode(countryValue: string,postcodeValue: string) {\n        const country = this.getCountry(countryValue);\n        if (country) {\n            const c2 = country3isoTo2isoTable[country.code];\n            if ((c2) && (postcodeValidatorExistsForCountry(c2))) {\n                return postcodeValidator(postcodeValue,c2);\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n}\n\nexport const libCountryMakeup = new CountryMakeupLib();","import { POSTCODE_REGEXES } from './postcode-regexes';\nexport { CountryCode } from './postcode-types';\nexport const postcodeValidator = (postcode, country) => {\n    if (!POSTCODE_REGEXES.has(country)) {\n        // throw Error if country code is unrecognised\n        throw Error(`Invalid country code: ${country}`);\n    }\n    return POSTCODE_REGEXES.get(country).test(postcode);\n};\nexport const postcodeValidatorExistsForCountry = (country) => {\n    return POSTCODE_REGEXES.has(country);\n};\n","module.exports = {\n\tcompareTwoStrings:compareTwoStrings,\n\tfindBestMatch:findBestMatch\n};\n\nfunction compareTwoStrings(first, second) {\n\tfirst = first.replace(/\\s+/g, '')\n\tsecond = second.replace(/\\s+/g, '')\n\n\tif (first === second) return 1; // identical or empty\n\tif (first.length < 2 || second.length < 2) return 0; // if either is a 0-letter or 1-letter string\n\n\tlet firstBigrams = new Map();\n\tfor (let i = 0; i < first.length - 1; i++) {\n\t\tconst bigram = first.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram) + 1\n\t\t\t: 1;\n\n\t\tfirstBigrams.set(bigram, count);\n\t};\n\n\tlet intersectionSize = 0;\n\tfor (let i = 0; i < second.length - 1; i++) {\n\t\tconst bigram = second.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram)\n\t\t\t: 0;\n\n\t\tif (count > 0) {\n\t\t\tfirstBigrams.set(bigram, count - 1);\n\t\t\tintersectionSize++;\n\t\t}\n\t}\n\n\treturn (2.0 * intersectionSize) / (first.length + second.length - 2);\n}\n\nfunction findBestMatch(mainString, targetStrings) {\n\tif (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');\n\t\n\tconst ratings = [];\n\tlet bestMatchIndex = 0;\n\n\tfor (let i = 0; i < targetStrings.length; i++) {\n\t\tconst currentTargetString = targetStrings[i];\n\t\tconst currentRating = compareTwoStrings(mainString, currentTargetString)\n\t\tratings.push({target: currentTargetString, rating: currentRating})\n\t\tif (currentRating > ratings[bestMatchIndex].rating) {\n\t\t\tbestMatchIndex = i\n\t\t}\n\t}\n\t\n\t\n\tconst bestMatch = ratings[bestMatchIndex]\n\t\n\treturn { ratings: ratings, bestMatch: bestMatch, bestMatchIndex: bestMatchIndex };\n}\n\nfunction areArgsValid(mainString, targetStrings) {\n\tif (typeof mainString !== 'string') return false;\n\tif (!Array.isArray(targetStrings)) return false;\n\tif (!targetStrings.length) return false;\n\tif (targetStrings.find( function (s) { return typeof s !== 'string'})) return false;\n\treturn true;\n}\n"],"names":["FormInternalData","formStateValue","formRequestMakeup","inputs","namedSubmits","valuesInitialized","getFirstNonHiddenInput","this","filter","getIsHidden","getInputByName","name","interfaceTo","getName","getInputHashByName","ret","forEach","getInputIndex","indexOf","getFormValues","getValue","value","clearInputErrors","getErrorState","registerInput","push","makeup","getMakeupByName","Error","signalKeyDownEnter","index","moveToNextIndex","submit","getDisabledState","nextIndex","length","focus","signalChange","clearError","updateSubmitDisabledBasedOnDisabledIfOtpNotComplete","signalDiffersFromInitialValueChange","updateSubmitDisabledBasedOnDisabledIfChanged","toCallOnFirstEffect","setSingleInputInitialValues","undefined","unregisterInput","newRegisteredInputs","x","registerSubmit","alternativeSubmits","unregisterSubmit","updateInputValues","updateValues","inputHash","Object","keys","input","setValue","disableForm","getInputDiffersFromInitialValueTable","getDiffersFromInitialValue","names","getDisableIfUnchanged","table","otpName","getDisableIfOtpNotComplete","getOtpIsComplete","overrideInputInitialValues","getInitialValue","signalInitialized","getType","getInitialSelectedIndex","setSelectedIndex","initialSelectedIndex","initialValue","defaultInitialValue","setInitialValues","focusInput","setInputValue","_Form","ref","children","parent","autoFocus","requestMakeup","relativeUrl","onSuccess","align","initializeCb","initialError","invisible","alternateStatusMessage","cssStateManager","useCssStateManager","useProperty","formStateValueRef","useRef","statusMessage","useStatusMessage","isSecurePage","useIsSecurePage","account","consumeAccount","router","useCustomRouter","useAccountBarParentNav","caption","path","current","internalDataRef","renderParentNav","cb","useInput","define","interfaceFromRef","interfaceToRef","isFirstRender","internalData","useEffect","useSubmit","alert","runLocked","_result","newAccountValue","message","inputNames","postRequest","values","result","err","RequestErrorPermissionDenied","RequestErrorNoNetworkConnection","showError","RequestErrorCustom","processError","close","useImperativeHandle","res","inputInitialValues","showInfo","permanent","errorTable","firstInput","div","getClassNames","component","FormStateContext","Provider","createContext","useForm","useContext","forwardRef","CountryCode","POSTCODE_REGEXES","Map","UK","GB","JE","GG","IM","US","CA","IE","DE","JP","FR","AU","IT","CH","AT","ES","NL","BE","DK","SE","NO","BR","PT","FI","AX","KR","CN","TW","SG","DZ","AD","AR","AM","AZ","BH","BD","BB","BY","BM","BA","IO","BN","BG","KH","CV","CL","CR","HR","CY","CZ","DO","EC","EG","EE","FO","GE","GR","GL","GT","HT","HN","HU","IS","IN","ID","IL","JO","KZ","KE","KW","KY","LA","LV","LB","LI","LT","LU","MK","MY","MV","MT","MU","MX","MD","MC","MA","NP","NZ","NI","NG","OM","PA","PK","PY","PH","PL","PR","RO","RU","SM","SA","SN","SK","SI","ZA","LK","TJ","TH","TN","TR","TM","UA","UY","UZ","VA","VE","ZM","AS","CC","CK","RS","ME","CS","YU","CX","ET","FK","NF","FM","GF","GN","GP","GS","GU","GW","HM","IQ","KG","LR","LS","MG","MH","MN","MP","MQ","NC","NE","VI","VN","PF","PG","PM","PN","PW","RE","SH","SJ","SO","SZ","TC","WF","XK","YT","INTL","country3isoTo2isoTable","libCountryMakeup","CountryMakeupLib","countryHash","mtable","rawCountryMakeup","code","ccode","po","provinceOptions","getCountry","getCountryCode","matchProvince","countryValue","provinceCaption","country","findBestMatch","map","bestMatchIndex","id","getProvinceOptionsHash","getCountryMakeupHash","group","optional","getSelectOptions","cachedSelectOptions","countryToSelectOption","countries","disabled","process","validatePostCode","postcodeValue","c2","has","postcodeValidatorExistsForCountry","postcode","get","test","postcodeValidator","compareTwoStrings","first","second","replace","firstBigrams","i","bigram","substring","count","set","intersectionSize","module","exports","mainString","targetStrings","Array","isArray","find","s","areArgsValid","ratings","currentTargetString","currentRating","target","rating","bestMatch"],"sourceRoot":""}