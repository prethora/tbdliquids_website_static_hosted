{"version":3,"file":"static/chunks/317-5ad82d9892b15d48.js","mappings":"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","sources":["webpack://_N_E/./components/account/title.tsx","webpack://_N_E/./components/account/your-addresses/address-block/address-display.tsx","webpack://_N_E/./components/common/device-independent-body.tsx","webpack://_N_E/./components/common/icon-button.tsx","webpack://_N_E/./components/common/mobile-title-with-back.tsx","webpack://_N_E/./lib/shared/form-request-makeup/requests/account/your-addresses/set-as-default.ts","webpack://_N_E/./components/account/your-addresses/address-block/set-as-default.tsx","webpack://_N_E/./components/account/your-addresses/address-block.tsx","webpack://_N_E/./components/account/your-addresses/add-address-block.tsx","webpack://_N_E/./pages/account/your-addresses.tsx"],"sourcesContent":["import { useCssStateManager } from \"../../hooks/use_css_state_manager\";\nimport { useAccountBarParentNav } from \"../account-bar\";\nimport Desktop from \"../common/desktop\";\nimport Mobile from \"../common/mobile\";\nimport MobileTitleWithBack from \"../common/mobile-title-with-back\";\n\nexport type AccountTitleProps = {\n    caption: string;\n    backPath?: string;\n    backPathCaption?: string;\n};\n\nexport default function AccountTitle({caption,backPath,backPathCaption}:AccountTitleProps)\n{\n    const cssStateManager = useCssStateManager([\"account-title\"]);\n    if (backPath && backPathCaption) {\n        useAccountBarParentNav(backPathCaption,backPath);\n    }\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>\n                <Desktop>\n                    <div className=\"title\">{caption}</div>\n                </Desktop>\n                <Mobile>\n                    {backPath?(\n                        <MobileTitleWithBack caption={caption} backPath={backPath} />\n                    ):(\n                        <div className=\"title\">{caption}</div>\n                    )}                    \n                </Mobile>\n            </div>\n            <style jsx>{`\n            .account-title {\n                margin-bottom: 25rem;\n            }\n            .title {\n                font-size: 22rem;\n                font-weight: 600;                \n                text-align: center;\n            }\n            `}</style>\n        </>\n    );\n}","import { CSSProperties } from \"react\";\nimport { AccountUserAddress } from \"../../../../hooks/use_account\";\nimport { miscShared } from \"../../../../lib/shared/lib/misc\";\n\nexport type AddressDisplayProps = {\n    address: AccountUserAddress;\n    fontSize?: number;\n};\n\nexport default function AddressDisplay({address,fontSize}:AddressDisplayProps) {\n    let { firstName,lastName,address1,address2,city,province,provinceCode,zip,country,phone } = address;\n    const cityProvince = [...(city?[city]:[]),...(provinceCode?[provinceCode]:[])].join(\" \");\n    const areaLine = [...(cityProvince?[cityProvince]:[]),...(zip?[zip]:[])].join(\" \");\n    phone = miscShared.convertSplitPhoneNumberToPlusPhoneNumber(phone);\n    if (phone===\"+\") phone = \"\";\n\n    const styles: CSSProperties = {\n        ...((typeof fontSize===\"number\")?{fontSize: `${fontSize}rem`}:{})\n    };    \n\n    return (\n        <>\n            <div style={styles}>\n                <div className=\"line highlight\">{firstName} {lastName}</div>\n                {address1?<div className=\"line\">{address1}</div>:\"\"}\n                {address2?<div className=\"line\">{address2}</div>:\"\"}\n                {areaLine?<div className=\"line\">{areaLine}</div>:\"\"}\n                {country?<div className=\"line\">{country}</div>:\"\"}\n                {phone?<div className=\"line\">Phone: {phone}</div>:\"\"}\n            </div>\n            <style jsx>{`\n            .line {\n                margin-bottom: 3rem;\n            }\n\n            .highlight {\n                font-weight: 600;\n            }\n            `}</style>\n        </>\n    );\n}","import { useContext } from \"react\";\nimport { useCssStateManager } from \"../../hooks/use_css_state_manager\";\nimport { LayoutStateContext } from \"../../contexts/layout_state\";\n\nexport type DeviceIndependentBodyProps = {\n    desktopWidth?: number;\n    children: any;\n};\n\nexport default function DeviceIndependentBody({children,desktopWidth = 1000}:DeviceIndependentBodyProps)\n{\n    const cssStateManager = useCssStateManager([\"device-independent-body\"]);\n    const { mobileDetect: { widthCutoffStyleSection } } = useContext(LayoutStateContext);\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>\n                <div className=\"inner\">\n                    {children}\n                </div>\n            </div>\n            <style jsx>{`\n            .device-independent-body {\n                width: 100%;\n                display: flex;\n                justify-content: center;\n            }\n\n            .inner {\n                max-width: ${desktopWidth}rem;\n                min-width: ${desktopWidth}rem;\n            }\n\n            ${widthCutoffStyleSection(`\n                .device-independent-body .inner {\n                    max-width: none;\n                    min-width: 0rem;\n                    width: 100%;\n                }\n            `)}\n            `}</style>\n        </>\n    );\n}","import { CSSProperties } from \"react\";\nimport { useCssStateManager } from \"../../hooks/use_css_state_manager\";\nimport { EventPane } from \"../core/event_pane\";\n\nexport type IconButtonProps = {\n    iconName: string;\n    fontSize?: number;\n    padding?: number;\n    extraPaddingHori?: number;\n    extraPaddingVerti?: number;\n    color?: string;\n    hoverColor?: string;\n    onClick?: () => void;\n    disabled?: boolean;\n};\n\nexport default function IconButton({iconName,fontSize = 20,color = \"#666\",hoverColor = \"#222\",padding = 10,extraPaddingHori = 0,extraPaddingVerti = 0,onClick = () => {},disabled}:IconButtonProps) {\n    const cssStateManager = useCssStateManager([\"icon-button\"]);\n    cssStateManager.useProperty(disabled,\"disabled\");\n    const innerStyles: CSSProperties = {\n        padding: `${padding+extraPaddingVerti}rem ${padding+extraPaddingHori}rem`\n    };\n    const iStyles: CSSProperties = {\n        fontSize: `${fontSize}rem`\n    };\n\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>\n                <div className=\"inner\" style={innerStyles}>\n                    <i className={`icon-${iconName}`} style={iStyles} />\n                </div>\n                <EventPane onClick={onClick} disabled={disabled} />\n            </div>\n            <style jsx>{`\n            .icon-button {\n                display: inline-block;\n                position: relative;\n                transition: background-color 0.3s;\n            }\n\n            .disabled {\n                opacity: 0.7;\n            }\n\n            .inner {\n                width: 100%;\n                height: 100%;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n            }\n\n            i {\n                display: inline-block;\n                color: ${color};\n                transition: color 0.3s;\n            }\n\n            .icon-button.touchdown {\n                background-color: rgba(0,0,0,0.08);\n            }\n\n            .icon-button.hover i {\n                color: ${hoverColor};\n            }\n            `}</style>\n        </>\n    );\n}","import { useCssStateManager } from \"../../hooks/use_css_state_manager\";\nimport { useCustomRouter } from \"../../hooks/use_custom_router\";\nimport { EventPane } from \"../core/event_pane\";\n\nexport type MobileTitleWithBackProps = {\n    caption: string;\n    backPath: string;\n};\n\nexport default function MobileTitleWithBack({caption,backPath}:MobileTitleWithBackProps) {\n    const cssStateManager = useCssStateManager([\"mobile-title-with-back\"]);\n\n    const router = useCustomRouter();\n\n    const handleBackClick = () => {\n        router.push(backPath);\n    };\n\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>\n                {caption}\n                <div className=\"back-button\">\n                    <i className=\"icon-navbar-left-arrow\" />\n                    <EventPane onClick={handleBackClick} />\n                </div>\n            </div>\n            <style jsx>{`\n            .mobile-title-with-back {\n                font-size: 22rem;\n                font-weight: 600;\n                text-align: center;\n                position: relative;\n                width: 100%;\n            }\n\n            .back-button {\n                --size: 40rem;\n                position: absolute;\n                left: -10rem;\n                top: -5rem;\n                width: var(--size);\n                height: var(--size);                    \n                display: flex;\n                justify-content: center;\n                align-items: center;                    \n            }\n\n            .back-button i {\n                display: block;\n                font-size: 20rem;\n                color: #777;\n            }\n\n            .back-button.touchdown {\n                background-color: rgba(0,0,0,0.07);\n            }\n            `}</style>\n        </>\n    );\n}\n","import { FormRequestMakeup } from \"../../../types\";\n\ntype NameValues = {\n    addressId: string;\n};\n\nconst _formRequestAccountYourAddressesSetAsDefault: FormRequestMakeup<NameValues> = {\n    inputs: {\n        addressId: {\n            caption: \"\"\n        }\n    },\n    relativeUrl: \"/users/account?action=set-address-as-default\"\n};\n\nexport const formRequestAccountYourAddressesSetAsDefault = _formRequestAccountYourAddressesSetAsDefault as FormRequestMakeup;","import { useRef } from \"react\";\nimport Form, { FormRefInterface } from \"../../../common/form/form\";\nimport { TextButtonLight } from \"../../../common/text-button\";\nimport { useCssStateManager } from \"../../../../hooks/use_css_state_manager\";\nimport { formRequestAccountYourAddressesSetAsDefault } from \"../../../../lib/shared/form-request-makeup/requests/account/your-addresses/set-as-default\";\nimport Input from \"../../../common/form/input\";\nimport { useStatusMessage } from \"../../../../hooks/use_status_message\";\n\nexport type AddressBlockSetAsDefaultProps = {\n    addressId: string;\n    statusMessage: ReturnType<typeof useStatusMessage>;\n    disabled?: boolean;\n};\n\nexport default function AddressBlockSetAsDefault({addressId,statusMessage,disabled = false}:AddressBlockSetAsDefaultProps) {\n    // const cssStateManager = useCssStateManager([\"addressblocksetasdefault\"]);\n\n    const formRef = useRef<FormRefInterface>();\n\n    const handleClick = () => {\n        if (formRef.current) {\n            formRef.current.submit();\n        }\n    };\n\n    return (\n        <>\n            <Form \n                ref={formRef}\n                invisible\n                requestMakeup={formRequestAccountYourAddressesSetAsDefault}\n                onSuccess={() => {\n                    return {\n                        type: \"message\",\n                        message: {\n                            type: \"info\",\n                            message: \"The default address for your account has been updated.\"\n                        }\n                    };\n                }}\n                alternateStatusMessage={statusMessage}\n            >\n                <Input name=\"addressId\" type=\"hidden\" initialValue={addressId} />\n            </Form>\n            <TextButtonLight caption=\"Set as Default\" onClick={handleClick} disabled={disabled} />\n            <style jsx>{`\n            .addressblocksetasdefault {\n            }\n            `}</style>\n        </>\n    );\n}","import { useContext } from \"react\";\nimport IconButton from \"../../common/icon-button\";\nimport { TextButtonLight } from \"../../common/text-button\";\nimport { AccountUserAddress } from \"../../../hooks/use_account\";\nimport { useCssStateManager } from \"../../../hooks/use_css_state_manager\";\nimport { useCustomRouter } from \"../../../hooks/use_custom_router\";\nimport { useStatusMessage } from \"../../../hooks/use_status_message\";\nimport { miscShared } from \"../../../lib/shared/lib/misc\";\nimport AddressDisplay from \"./address-block/address-display\";\nimport AddressBlockSetAsDefault from \"./address-block/set-as-default\";\nimport { LayoutStateContext } from \"../../../contexts/layout_state\";\n\nexport type AddressBlockProps = {\n    address: AccountUserAddress;\n    isDefault?: boolean;\n    statusMessage: ReturnType<typeof useStatusMessage>;\n    disabled?: boolean;\n};\n\nexport default function AddressBlock({address,isDefault = false,statusMessage,disabled = false}:AddressBlockProps) {\n    const cssStateManager = useCssStateManager([\"addressblock\"]);\n    cssStateManager.useProperty(isDefault,\"is-default\");\n    let { id } = address;\n\n    const { mobileDetect: { widthCutoff: mobileCutoff } } = useContext(LayoutStateContext);\n\n    const router = useCustomRouter();\n\n    const handleEditClick = () => {\n        router.push(`/account/your-addresses/edit?id=${id}`);\n    };\n\n    const handleDeleteClick = () => {\n        router.push(`/account/your-addresses/delete?id=${id}`);\n    };    \n\n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>\n                {isDefault?<div className=\"default-header\">Default</div>:\"\"}\n                <div className=\"inner\">\n                    <AddressDisplay address={address}/>\n                    <div className=\"actions\">\n                        <IconButton iconName=\"edit\" onClick={handleEditClick} disabled={disabled} />\n                        <IconButton iconName=\"delete\" onClick={handleDeleteClick} disabled={disabled} />\n                        {!isDefault?(\n                            <div className=\"set-as-default\"><span className=\"sep\">|</span> <AddressBlockSetAsDefault disabled={disabled} statusMessage={statusMessage} addressId={address.id} /></div>\n                        ):\"\"}\n                    </div>\n                </div>\n            </div>\n            <style jsx>{`\n            .addressblock {\n                border: 1rem solid var(--border-color);\n                border-radius: 8rem;\n                flex: 0 0 320rem;\n                height: 266rem;\n                overflow: hidden;                \n                font-size: 14rem;\n                color: #444;\n                display: flex;\n                flex-direction: column;\n            }\n\n            .inner {\n                padding: 25rem 20rem;\n                padding-bottom: 10rem;\n                flex: 1 0;\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n            }\n\n            .is-default {\n                --border-color: #888;\n            }\n\n            .default-header {\n                text-align: center;\n                border-bottom: 1rem solid var(--border-color);\n                padding: 8rem 0rem;\n                font-size: 12rem;\n                color: #999;\n            }\n\n            .line {\n                margin-bottom: 3rem;\n            }\n\n            .highlight {\n                font-weight: 600;\n            }\n\n            .set-as-default {\n                display: inline-block;\n                position: relative;\n                top: -2rem;\n            }\n\n            .sep {\n                padding-left: 5rem;\n                padding-right: 10rem;\n                font-weight: 600;\n                font-size: 15rem;\n            }\n\n            @media screen and (max-width: ${mobileCutoff}px) {\n                .addressblock {\n                    flex: 0 0 266rem;\n                    width: 100%;\n                }\n            }\n            `}</style>\n        </>\n    );\n}","import { useContext } from \"react\";\nimport IconButton from \"../../common/icon-button\";\nimport { TextButtonLight } from \"../../common/text-button\";\nimport { EventPane } from \"../../core/event_pane\";\nimport { AccountUserAddress } from \"../../../hooks/use_account\";\nimport { useCssStateManager } from \"../../../hooks/use_css_state_manager\";\nimport { miscShared } from \"../../../lib/shared/lib/misc\";\nimport { LayoutStateContext } from \"../../../contexts/layout_state\";\n\nexport type AddAddressBlockProps = {\n    onClick?: () => void;\n    disabled?: boolean;\n};\n\nexport default function AddAddressBlock({onClick = () => {},disabled = false}:AddAddressBlockProps) {\n    const cssStateManager = useCssStateManager([\"addaddressblock\"]);\n\n    const { mobileDetect: { widthCutoff: mobileCutoff } } = useContext(LayoutStateContext);\n    \n    return (\n        <>\n            <div className={cssStateManager.getClassNames()}>\n                <div className=\"inner\">\n                    <div className=\"content\">\n                        <div className=\"plus\">+</div>\n                        Add Address\n                    </div>                    \n                </div>\n                <EventPane onClick={onClick} hoverOnTouchDown disabled={disabled} />\n            </div>\n            <style jsx>{`\n            .addaddressblock {\n                border: 2rem dashed var(--border-color);\n                /*\n                border-color: var(--border-color);\n                border-width: 1rem;\n                border-style: dotted;\n                */\n                border-radius: 8rem;\n                flex: 0 0 320rem;\n                height: 266rem;\n                overflow: hidden;\n                font-size: 14rem;\n                color: #444;\n                display: flex;\n                position: relative;\n                --duration: 0.3s;\n                transition: background-color var(--duration),border-color var(--duration);\n            }\n\n            .addaddressblock.hover {\n                background-color: rgba(0,0,0,0.03);\n                border: 2rem dashed #777;\n            }\n\n            .addaddressblock.hover .content {\n                color: #555;\n            }\n\n            .content {\n                text-align: center;\n                font-size: 18rem;\n                color: #777;\n                transition: color var(--duration);\n            }\n\n            .plus {\n                font-size: 56rem;\n                color: #ccc;\n                transition: color var(--duration);\n            }\n\n            .addaddressblock.hover .plus {\n                color: #bbb;\n            }\n\n            .inner {\n                padding: 25rem 20rem;\n                flex: 1 0;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n            }\n\n            .is-default {\n                --border-color: #888;\n            }\n\n            .default-header {\n                text-align: center;\n                border-bottom: 1rem solid var(--border-color);\n                padding: 8rem 0rem;\n                font-size: 12rem;\n                color: #999;\n            }\n\n            .line {\n                margin-bottom: 3rem;\n            }\n\n            .highlight {\n                font-weight: 600;\n            }\n\n            .set-as-default {\n                display: inline-block;\n                position: relative;\n                top: -2rem;\n            }\n\n            .sep {\n                padding-left: 5rem;\n                padding-right: 10rem;\n                font-weight: 600;\n                font-size: 15rem;\n            }\n\n            @media screen and (max-width: ${mobileCutoff}px) {\n                .addaddressblock {\n                    flex: 0 0 266rem;\n                    width: 100%;\n                }\n            }\n            `}</style>\n        </>\n    );\n}","import { Account, consumeAccount } from \"../../hooks/use_account\";\nimport { SmartState } from \"../../hooks/use_smart_state\";\nimport { securePage } from \"../../components/common/secure_page\";\nimport AccountTitle from \"../../components/account/title\";\nimport DeviceIndependentBody from \"../../components/common/device-independent-body\";\nimport AddressBlock from \"../../components/account/your-addresses/address-block\";\nimport AddAddressBlock from \"../../components/account/your-addresses/add-address-block\";\nimport { useCustomRouter } from \"../../hooks/use_custom_router\";\nimport { FormParent } from \"../../components/common/form/form\";\nimport { useStatusMessage } from \"../../hooks/use_status_message\";\nimport { useContext } from \"react\";\nimport { LayoutStateContext } from \"../../contexts/layout_state\";\n\nexport type AccountYourAddressesPageProps = {\n    result: {};\n    account: SmartState<Account | null>;\n};\n\nexport const formParentYourAddresses: FormParent = {\n    caption: \"Your Addresses\",\n    path: \"/account/your-addresses\"\n};\n\nconst AccountYourAddressesPage = securePage(function({result,account}: AccountYourAddressesPageProps) {\n    const titleCaption = \"Your Addresses\";\n\n    const router = useCustomRouter();\n\n    const { user } = account.value;\n    const handleAddAddressClick = () => {\n        router.push(\"/account/your-addresses/add\");\n    };\n\n    const { routerIsLocked,mobileDetect: { widthCutoff: mobileCutoff } } = useContext(LayoutStateContext);\n\n    const statusMessage = useStatusMessage();\n\n    return (<>\n        <div className=\"account-your-addresses-page\">\n            {statusMessage.component}\n            <AccountTitle caption={titleCaption} backPath=\"/account\" backPathCaption=\"Account\" />\n            <DeviceIndependentBody desktopWidth={990}>                \n                <div className=\"addresses-grid\">\n                    <AddAddressBlock onClick={handleAddAddressClick} disabled={routerIsLocked.value} />\n                    {user.addresses.map((address,index) => <AddressBlock disabled={routerIsLocked.value} statusMessage={statusMessage} key={address.id} address={address} isDefault={index===0} />)}\n                </div>\n            </DeviceIndependentBody>    \n        </div>\n        <style jsx>{`\n            .account-your-addresses-page {\n                /* min-height: 600rem; */\n                width: 100%;\n                --border-color: #aaa;\n                padding-bottom: 20rem;\n            }\n\n            .addresses-grid {\n                display: flex;\n                gap: 15rem;\n                flex-wrap: wrap;\n                margin-top: 4rem;                \n            }\n            \n            @media screen and (max-width: ${mobileCutoff}px) {\n                .addresses-grid {\n                    flex-direction: column;\n                }\n            }\n        `}</style>\n    </>\n);\n},undefined,{\n    onBeforeLoad: (_,account,query) => {\n        const { user } = account.value;\n        if ((user.addresses.length===0) && (query[\"from-account\"]===\"true\")) {\n            return {\n                path: \"/account/your-addresses/setup-default\"\n            };\n        }\n    }\n});\n\nexport default AccountYourAddressesPage;\n"],"names":["AccountTitle","caption","backPath","backPathCaption","cssStateManager","useCssStateManager","useAccountBarParentNav","div","getClassNames","Desktop","Mobile","MobileTitleWithBack","AddressDisplay","address","fontSize","firstName","lastName","address1","address2","city","provinceCode","province","zip","country","phone","cityProvince","join","areaLine","miscShared","styles","style","DeviceIndependentBody","children","desktopWidth","mobileDetect","useContext","LayoutStateContext","widthCutoffStyleSection","IconButton","iconName","color","hoverColor","padding","extraPaddingHori","extraPaddingVerti","onClick","disabled","useProperty","innerStyles","iStyles","i","EventPane","router","useCustomRouter","push","formRequestAccountYourAddressesSetAsDefault","inputs","addressId","relativeUrl","AddressBlockSetAsDefault","statusMessage","formRef","useRef","Form","ref","invisible","requestMakeup","onSuccess","type","message","alternateStatusMessage","Input","name","initialValue","TextButtonLight","current","submit","AddressBlock","isDefault","id","widthCutoff","mobileCutoff","span","AddAddressBlock","hoverOnTouchDown","formParentYourAddresses","path","securePage","result","account","value","user","routerIsLocked","useStatusMessage","component","addresses","map","index","undefined","onBeforeLoad","_","query","length"],"sourceRoot":""}